<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10200.17.0328.0755                               -->
<workbook source-build='10.2.1 (10200.17.0328.0755)' source-platform='mac' version='10.2' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style-theme name='clean' />
  <datasources>
    <datasource caption='Data by country (Worldbankdata)' inline='true' name='excel-direct.42012.939728854166' version='10.2'>
      <connection class='federated' prefer-ind-semantics='true'>
        <named-connections>
          <named-connection caption='Data by country (Worldbankdata)' name='excel-direct.42012.939728854166leaf'>
            <connection class='excel-direct' cleaning='no' compat='no' filename='/Users/Amardeep/Documents/Semester_2/Dic/Term_Project/Term Project/Worldbankdata.xlsx' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.42012.939728854166leaf' name='&apos;Data by country$&apos;' table='[&apos;Data by country$&apos;]' type='table'>
          <columns header='yes'>
            <column datatype='string' name='Country Name' ordinal='0' />
            <column datatype='date' name='Date' ordinal='1' />
            <column datatype='integer' name='Stock: Listed domestic companies (count)' ordinal='2' />
            <column datatype='integer' name='Stock: Market cap companies (current US$)' ordinal='3' />
            <column datatype='integer' name='Stock: Traded, total value (current US$)' ordinal='4' />
            <column datatype='integer' name='Stock: Market cap of companies (% GDP)' ordinal='5' />
            <column datatype='integer' name='Stock: Traded, total value (% GDP)' ordinal='6' />
            <column datatype='integer' name='Stock: Traded, turnover ratio (%)' ordinal='7' />
            <column datatype='integer' name='Banks: Comm branches (per 100k adults)' ordinal='8' />
            <column datatype='integer' name='Banks: Automated tellers (per 100k adults)' ordinal='9' />
            <column datatype='integer' name='Finance: Consumer price index (2005 = 100)' ordinal='10' />
            <column datatype='integer' name='Finance: Deposit interest rate (%)' ordinal='11' />
            <column datatype='integer' name='Finance: Lending interest rate (%)' ordinal='12' />
            <column datatype='integer' name='Finance: Real interest rate (%)' ordinal='13' />
            <column datatype='integer' name='Business: Start-up proc cost (% GNI per capita)' ordinal='14' />
            <column datatype='integer' name='Business: Cost to export ($ per container)' ordinal='15' />
            <column datatype='integer' name='Business: Cost to import ($ per container)' ordinal='16' />
            <column datatype='integer' name='Business: Ease of biz index (1=easiest)' ordinal='17' />
            <column datatype='integer' name='Business: Start-up procedures (count)' ordinal='18' />
            <column datatype='integer' name='Business: Legal rights (0=weak, 10=strong)' ordinal='19' />
            <column datatype='integer' name='Business: Time to start a business (days)' ordinal='20' />
            <column datatype='integer' name='Business: Time to prep &amp; pay taxes (hours)' ordinal='21' />
            <column datatype='integer' name='Business: Total tax rate (% of commercial profits)' ordinal='22' />
            <column datatype='integer' name='Business: Firing cost (weeks of wages)' ordinal='23' />
            <column datatype='integer' name='R&amp;D: Scientific &amp; tech articles' ordinal='24' />
            <column datatype='integer' name='Transit: Air transport, passengers (count)' ordinal='25' />
            <column datatype='integer' name='Transit: Railways, (million passenger-km)' ordinal='26' />
            <column datatype='integer' name='Transit: Passenger cars (per 1,000 people)' ordinal='27' />
            <column datatype='integer' name='Business: Mobile phone subscribers' ordinal='28' />
            <column datatype='integer' name='Business: Internet users (per 100 people)' ordinal='29' />
            <column datatype='integer' name='Military: Armed forces personnel' ordinal='30' />
            <column datatype='real' name='Military: Expenditure (% GDP)' ordinal='31' />
            <column datatype='real' name='Military: Expenditure (% central govt exp)' ordinal='32' />
            <column datatype='integer' name='Business: Exports (% GDP)' ordinal='33' />
            <column datatype='integer' name='Business: Imports (% GDP)' ordinal='34' />
            <column datatype='integer' name='Business: Trade (% GDP)' ordinal='35' />
            <column datatype='integer' name='Business: Exports (current US$)' ordinal='36' />
            <column datatype='integer' name='Business: Imports (current US$)' ordinal='37' />
            <column datatype='integer' name='Finance: GDP (current US$)' ordinal='38' />
            <column datatype='integer' name='Finance: GDP per capita (current US$)' ordinal='39' />
            <column datatype='integer' name='Finance: Net income from abroad (current LCU)' ordinal='40' />
            <column datatype='integer' name='Government: Seats women in nat parliament (%)' ordinal='41' />
            <column datatype='integer' name='Health: Mortality, under-5 (per 1,000 live births)' ordinal='42' />
            <column datatype='integer' name='Health: Health expenditure per capita (current US$)' ordinal='43' />
            <column datatype='integer' name='Health: Health expenditure, total (% GDP)' ordinal='44' />
            <column datatype='integer' name='Population: Total (count)' ordinal='45' />
            <column datatype='integer' name='Population: Urban (count)' ordinal='46' />
            <column datatype='integer' name='Population:: Birth rate, crude (per 1,000)' ordinal='47' />
            <column datatype='integer' name='Health: Life expectancy at birth, female (years)' ordinal='48' />
            <column datatype='integer' name='Health: Life expectancy at birth, male (years)' ordinal='49' />
            <column datatype='integer' name='Health: Life expectancy at birth, total (years)' ordinal='50' />
            <column datatype='integer' name='Population: Ages 0-14 (% of total)' ordinal='51' />
            <column datatype='integer' name='Population: Ages 15-64 (% of total)' ordinal='52' />
            <column datatype='integer' name='Population: Ages 65+ (% of total)' ordinal='53' />
            <column datatype='integer' name='Business: International tourism inc (current US$)' ordinal='54' />
            <column datatype='integer' name='Business: International tourism, exp (current US$)' ordinal='55' />
            <column datatype='integer' name='Measures with values' ordinal='56' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Country Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country Name]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Country Name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Listed domestic companies (count)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Listed domestic companies (count)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Listed domestic companies (count)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Market cap companies (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Market cap companies (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Market cap companies (current US$)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Traded, total value (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Traded, total value (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Traded, total value (current US$)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Market cap of companies (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Market cap of companies (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Market cap of companies (% GDP)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Traded, total value (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Traded, total value (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Traded, total value (% GDP)</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Traded, turnover ratio (%)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Traded, turnover ratio (%)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Traded, turnover ratio (%)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Banks: Comm branches (per 100k adults)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Banks: Comm branches (per 100k adults)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Banks: Comm branches (per 100k adults)</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Banks: Automated tellers (per 100k adults)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Banks: Automated tellers (per 100k adults)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Banks: Automated tellers (per 100k adults)</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: Consumer price index (2005 = 100)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: Consumer price index (2005 = 100)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: Consumer price index (2005 = 100)</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: Deposit interest rate (%)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: Deposit interest rate (%)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: Deposit interest rate (%)</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: Lending interest rate (%)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: Lending interest rate (%)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: Lending interest rate (%)</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: Real interest rate (%)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: Real interest rate (%)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: Real interest rate (%)</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Start-up proc cost (% GNI per capita)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Start-up proc cost (% GNI per capita)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Start-up proc cost (% GNI per capita)</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Cost to export ($ per container)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Cost to export ($ per container)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Cost to export ($ per container)</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Cost to import ($ per container)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Cost to import ($ per container)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Cost to import ($ per container)</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Ease of biz index (1=easiest)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Ease of biz index (1=easiest)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Ease of biz index (1=easiest)</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Start-up procedures (count)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Start-up procedures (count)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Start-up procedures (count)</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Legal rights (0=weak, 10=strong)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Legal rights (0=weak, 10=strong)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Legal rights (0=weak, 10=strong)</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Time to start a business (days)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Time to start a business (days)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Time to start a business (days)</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Time to prep &amp; pay taxes (hours)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Time to prep &amp; pay taxes (hours)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Time to prep &amp; pay taxes (hours)</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Total tax rate (% of commercial profits)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Total tax rate (% of commercial profits)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Total tax rate (% of commercial profits)</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Firing cost (weeks of wages)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Firing cost (weeks of wages)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Firing cost (weeks of wages)</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>R&amp;D: Scientific &amp; tech articles</remote-name>
            <remote-type>20</remote-type>
            <local-name>[R&amp;D: Scientific &amp; tech articles]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>R&amp;D: Scientific &amp; tech articles</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Transit: Air transport, passengers (count)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Transit: Air transport, passengers (count)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Transit: Air transport, passengers (count)</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Transit: Railways, (million passenger-km)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Transit: Railways, (million passenger-km)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Transit: Railways, (million passenger-km)</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Transit: Passenger cars (per 1,000 people)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Transit: Passenger cars (per 1,000 people)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Transit: Passenger cars (per 1,000 people)</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Mobile phone subscribers</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Mobile phone subscribers]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Mobile phone subscribers</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Internet users (per 100 people)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Internet users (per 100 people)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Internet users (per 100 people)</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Military: Armed forces personnel</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Military: Armed forces personnel]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Military: Armed forces personnel</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Military: Expenditure (% GDP)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Military: Expenditure (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Military: Expenditure (% GDP)</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Military: Expenditure (% central govt exp)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Military: Expenditure (% central govt exp)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Military: Expenditure (% central govt exp)</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Exports (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Exports (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Exports (% GDP)</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Imports (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Imports (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Imports (% GDP)</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Trade (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Trade (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Trade (% GDP)</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Exports (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Exports (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Exports (current US$)</remote-alias>
            <ordinal>36</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Imports (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Imports (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Imports (current US$)</remote-alias>
            <ordinal>37</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: GDP (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: GDP (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: GDP (current US$)</remote-alias>
            <ordinal>38</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: GDP per capita (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: GDP per capita (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: GDP per capita (current US$)</remote-alias>
            <ordinal>39</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: Net income from abroad (current LCU)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: Net income from abroad (current LCU)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: Net income from abroad (current LCU)</remote-alias>
            <ordinal>40</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Government: Seats women in nat parliament (%)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Government: Seats women in nat parliament (%)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Government: Seats women in nat parliament (%)</remote-alias>
            <ordinal>41</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Mortality, under-5 (per 1,000 live births)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Mortality, under-5 (per 1,000 live births)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Mortality, under-5 (per 1,000 live births)</remote-alias>
            <ordinal>42</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Health expenditure per capita (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Health expenditure per capita (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Health expenditure per capita (current US$)</remote-alias>
            <ordinal>43</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Health expenditure, total (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Health expenditure, total (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Health expenditure, total (% GDP)</remote-alias>
            <ordinal>44</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population: Total (count)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population: Total (count)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population: Total (count)</remote-alias>
            <ordinal>45</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population: Urban (count)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population: Urban (count)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population: Urban (count)</remote-alias>
            <ordinal>46</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population:: Birth rate, crude (per 1,000)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population:: Birth rate, crude (per 1,000)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population:: Birth rate, crude (per 1,000)</remote-alias>
            <ordinal>47</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Life expectancy at birth, female (years)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Life expectancy at birth, female (years)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Life expectancy at birth, female (years)</remote-alias>
            <ordinal>48</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Life expectancy at birth, male (years)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Life expectancy at birth, male (years)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Life expectancy at birth, male (years)</remote-alias>
            <ordinal>49</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Life expectancy at birth, total (years)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Life expectancy at birth, total (years)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Life expectancy at birth, total (years)</remote-alias>
            <ordinal>50</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population: Ages 0-14 (% of total)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population: Ages 0-14 (% of total)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population: Ages 0-14 (% of total)</remote-alias>
            <ordinal>51</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population: Ages 15-64 (% of total)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population: Ages 15-64 (% of total)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population: Ages 15-64 (% of total)</remote-alias>
            <ordinal>52</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population: Ages 65+ (% of total)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population: Ages 65+ (% of total)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population: Ages 65+ (% of total)</remote-alias>
            <ordinal>53</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: International tourism inc (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: International tourism inc (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: International tourism inc (current US$)</remote-alias>
            <ordinal>54</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: International tourism, exp (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: International tourism, exp (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: International tourism, exp (current US$)</remote-alias>
            <ordinal>55</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Measures with values</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Measures with values]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Measures with values</remote-alias>
            <ordinal>56</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>2</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.111307' measure-ordering='alphabetic' measure-percentage='0.888693' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Data by country (Worldbankdata) (2)' inline='true' name='excel-direct.42012.950994398147' version='10.2'>
      <connection class='federated' prefer-ind-semantics='true'>
        <named-connections>
          <named-connection caption='Data by country (Worldbankdata) (2)' name='excel-direct.42012.950994398147leaf'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/Amardeep/Documents/Semester_2/Dic/Term_Project/Term Project/Worldbankdata.xlsx' interpretationMode='0' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.42012.950994398147leaf' name='&apos;Data by country$&apos;' table='[&apos;Data by country$&apos;]' type='table'>
          <columns gridOrigin='A1:BE2355:no:A1:BE2355:0' header='yes' outcome='2'>
            <column datatype='string' name='Country Name' ordinal='0' />
            <column datatype='date' name='Date' ordinal='1' />
            <column datatype='integer' name='Stock: Listed domestic companies (count)' ordinal='2' />
            <column datatype='integer' name='Stock: Market cap companies (current US$)' ordinal='3' />
            <column datatype='integer' name='Stock: Traded, total value (current US$)' ordinal='4' />
            <column datatype='integer' name='Stock: Market cap of companies (% GDP)' ordinal='5' />
            <column datatype='integer' name='Stock: Traded, total value (% GDP)' ordinal='6' />
            <column datatype='integer' name='Stock: Traded, turnover ratio (%)' ordinal='7' />
            <column datatype='integer' name='Banks: Comm branches (per 100k adults)' ordinal='8' />
            <column datatype='integer' name='Banks: Automated tellers (per 100k adults)' ordinal='9' />
            <column datatype='integer' name='Finance: Consumer price index (2005 = 100)' ordinal='10' />
            <column datatype='integer' name='Finance: Deposit interest rate (%)' ordinal='11' />
            <column datatype='integer' name='Finance: Lending interest rate (%)' ordinal='12' />
            <column datatype='integer' name='Finance: Real interest rate (%)' ordinal='13' />
            <column datatype='integer' name='Business: Start-up proc cost (% GNI per capita)' ordinal='14' />
            <column datatype='integer' name='Business: Cost to export ($ per container)' ordinal='15' />
            <column datatype='integer' name='Business: Cost to import ($ per container)' ordinal='16' />
            <column datatype='integer' name='Business: Ease of biz index (1=easiest)' ordinal='17' />
            <column datatype='integer' name='Business: Start-up procedures (count)' ordinal='18' />
            <column datatype='integer' name='Business: Legal rights (0=weak, 10=strong)' ordinal='19' />
            <column datatype='integer' name='Business: Time to start a business (days)' ordinal='20' />
            <column datatype='integer' name='Business: Time to prep &amp; pay taxes (hours)' ordinal='21' />
            <column datatype='integer' name='Business: Total tax rate (% of commercial profits)' ordinal='22' />
            <column datatype='integer' name='Business: Firing cost (weeks of wages)' ordinal='23' />
            <column datatype='integer' name='R&amp;D: Scientific &amp; tech articles' ordinal='24' />
            <column datatype='integer' name='Transit: Air transport, passengers (count)' ordinal='25' />
            <column datatype='integer' name='Transit: Railways, (million passenger-km)' ordinal='26' />
            <column datatype='integer' name='Transit: Passenger cars (per 1,000 people)' ordinal='27' />
            <column datatype='integer' name='Business: Mobile phone subscribers' ordinal='28' />
            <column datatype='integer' name='Business: Internet users (per 100 people)' ordinal='29' />
            <column datatype='integer' name='Military: Armed forces personnel' ordinal='30' />
            <column datatype='real' name='Military: Expenditure (% GDP)' ordinal='31' />
            <column datatype='real' name='Military: Expenditure (% central govt exp)' ordinal='32' />
            <column datatype='integer' name='Business: Exports (% GDP)' ordinal='33' />
            <column datatype='integer' name='Business: Imports (% GDP)' ordinal='34' />
            <column datatype='integer' name='Business: Trade (% GDP)' ordinal='35' />
            <column datatype='integer' name='Business: Exports (current US$)' ordinal='36' />
            <column datatype='integer' name='Business: Imports (current US$)' ordinal='37' />
            <column datatype='integer' name='Finance: GDP (current US$)' ordinal='38' />
            <column datatype='integer' name='Finance: GDP per capita (current US$)' ordinal='39' />
            <column datatype='integer' name='Finance: Net income from abroad (current LCU)' ordinal='40' />
            <column datatype='integer' name='Government: Seats women in nat parliament (%)' ordinal='41' />
            <column datatype='integer' name='Health: Mortality, under-5 (per 1,000 live births)' ordinal='42' />
            <column datatype='integer' name='Health: Health expenditure per capita (current US$)' ordinal='43' />
            <column datatype='integer' name='Health: Health expenditure, total (% GDP)' ordinal='44' />
            <column datatype='integer' name='Population: Total (count)' ordinal='45' />
            <column datatype='integer' name='Population: Urban (count)' ordinal='46' />
            <column datatype='integer' name='Population:: Birth rate, crude (per 1,000)' ordinal='47' />
            <column datatype='integer' name='Health: Life expectancy at birth, female (years)' ordinal='48' />
            <column datatype='integer' name='Health: Life expectancy at birth, male (years)' ordinal='49' />
            <column datatype='integer' name='Health: Life expectancy at birth, total (years)' ordinal='50' />
            <column datatype='integer' name='Population: Ages 0-14 (% of total)' ordinal='51' />
            <column datatype='integer' name='Population: Ages 15-64 (% of total)' ordinal='52' />
            <column datatype='integer' name='Population: Ages 65+ (% of total)' ordinal='53' />
            <column datatype='integer' name='Business: International tourism inc (current US$)' ordinal='54' />
            <column datatype='integer' name='Business: International tourism, exp (current US$)' ordinal='55' />
            <column datatype='integer' name='Measures with values' ordinal='56' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Country Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country Name]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Country Name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Listed domestic companies (count)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Listed domestic companies (count)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Listed domestic companies (count)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Market cap companies (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Market cap companies (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Market cap companies (current US$)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Traded, total value (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Traded, total value (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Traded, total value (current US$)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Market cap of companies (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Market cap of companies (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Market cap of companies (% GDP)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Traded, total value (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Traded, total value (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Traded, total value (% GDP)</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Traded, turnover ratio (%)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Traded, turnover ratio (%)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Traded, turnover ratio (%)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Banks: Comm branches (per 100k adults)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Banks: Comm branches (per 100k adults)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Banks: Comm branches (per 100k adults)</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Banks: Automated tellers (per 100k adults)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Banks: Automated tellers (per 100k adults)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Banks: Automated tellers (per 100k adults)</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: Consumer price index (2005 = 100)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: Consumer price index (2005 = 100)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: Consumer price index (2005 = 100)</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: Deposit interest rate (%)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: Deposit interest rate (%)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: Deposit interest rate (%)</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: Lending interest rate (%)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: Lending interest rate (%)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: Lending interest rate (%)</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: Real interest rate (%)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: Real interest rate (%)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: Real interest rate (%)</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Start-up proc cost (% GNI per capita)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Start-up proc cost (% GNI per capita)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Start-up proc cost (% GNI per capita)</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Cost to export ($ per container)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Cost to export ($ per container)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Cost to export ($ per container)</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Cost to import ($ per container)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Cost to import ($ per container)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Cost to import ($ per container)</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Ease of biz index (1=easiest)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Ease of biz index (1=easiest)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Ease of biz index (1=easiest)</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Start-up procedures (count)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Start-up procedures (count)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Start-up procedures (count)</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Legal rights (0=weak, 10=strong)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Legal rights (0=weak, 10=strong)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Legal rights (0=weak, 10=strong)</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Time to start a business (days)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Time to start a business (days)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Time to start a business (days)</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Time to prep &amp; pay taxes (hours)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Time to prep &amp; pay taxes (hours)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Time to prep &amp; pay taxes (hours)</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Total tax rate (% of commercial profits)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Total tax rate (% of commercial profits)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Total tax rate (% of commercial profits)</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Firing cost (weeks of wages)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Firing cost (weeks of wages)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Firing cost (weeks of wages)</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>R&amp;D: Scientific &amp; tech articles</remote-name>
            <remote-type>20</remote-type>
            <local-name>[R&amp;D: Scientific &amp; tech articles]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>R&amp;D: Scientific &amp; tech articles</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Transit: Air transport, passengers (count)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Transit: Air transport, passengers (count)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Transit: Air transport, passengers (count)</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Transit: Railways, (million passenger-km)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Transit: Railways, (million passenger-km)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Transit: Railways, (million passenger-km)</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Transit: Passenger cars (per 1,000 people)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Transit: Passenger cars (per 1,000 people)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Transit: Passenger cars (per 1,000 people)</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Mobile phone subscribers</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Mobile phone subscribers]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Mobile phone subscribers</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Internet users (per 100 people)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Internet users (per 100 people)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Internet users (per 100 people)</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Military: Armed forces personnel</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Military: Armed forces personnel]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Military: Armed forces personnel</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Military: Expenditure (% GDP)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Military: Expenditure (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Military: Expenditure (% GDP)</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Military: Expenditure (% central govt exp)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Military: Expenditure (% central govt exp)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Military: Expenditure (% central govt exp)</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Exports (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Exports (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Exports (% GDP)</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Imports (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Imports (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Imports (% GDP)</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Trade (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Trade (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Trade (% GDP)</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Exports (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Exports (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Exports (current US$)</remote-alias>
            <ordinal>36</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Imports (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Imports (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Imports (current US$)</remote-alias>
            <ordinal>37</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: GDP (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: GDP (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: GDP (current US$)</remote-alias>
            <ordinal>38</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: GDP per capita (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: GDP per capita (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: GDP per capita (current US$)</remote-alias>
            <ordinal>39</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: Net income from abroad (current LCU)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: Net income from abroad (current LCU)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: Net income from abroad (current LCU)</remote-alias>
            <ordinal>40</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Government: Seats women in nat parliament (%)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Government: Seats women in nat parliament (%)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Government: Seats women in nat parliament (%)</remote-alias>
            <ordinal>41</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Mortality, under-5 (per 1,000 live births)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Mortality, under-5 (per 1,000 live births)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Mortality, under-5 (per 1,000 live births)</remote-alias>
            <ordinal>42</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Health expenditure per capita (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Health expenditure per capita (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Health expenditure per capita (current US$)</remote-alias>
            <ordinal>43</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Health expenditure, total (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Health expenditure, total (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Health expenditure, total (% GDP)</remote-alias>
            <ordinal>44</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population: Total (count)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population: Total (count)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population: Total (count)</remote-alias>
            <ordinal>45</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population: Urban (count)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population: Urban (count)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population: Urban (count)</remote-alias>
            <ordinal>46</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population:: Birth rate, crude (per 1,000)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population:: Birth rate, crude (per 1,000)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population:: Birth rate, crude (per 1,000)</remote-alias>
            <ordinal>47</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Life expectancy at birth, female (years)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Life expectancy at birth, female (years)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Life expectancy at birth, female (years)</remote-alias>
            <ordinal>48</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Life expectancy at birth, male (years)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Life expectancy at birth, male (years)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Life expectancy at birth, male (years)</remote-alias>
            <ordinal>49</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Life expectancy at birth, total (years)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Life expectancy at birth, total (years)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Life expectancy at birth, total (years)</remote-alias>
            <ordinal>50</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population: Ages 0-14 (% of total)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population: Ages 0-14 (% of total)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population: Ages 0-14 (% of total)</remote-alias>
            <ordinal>51</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population: Ages 15-64 (% of total)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population: Ages 15-64 (% of total)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population: Ages 15-64 (% of total)</remote-alias>
            <ordinal>52</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population: Ages 65+ (% of total)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population: Ages 65+ (% of total)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population: Ages 65+ (% of total)</remote-alias>
            <ordinal>53</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: International tourism inc (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: International tourism inc (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: International tourism inc (current US$)</remote-alias>
            <ordinal>54</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: International tourism, exp (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: International tourism, exp (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: International tourism, exp (current US$)</remote-alias>
            <ordinal>55</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Measures with values</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Measures with values]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Measures with values</remote-alias>
            <ordinal>56</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:BE2355:no:A1:BE2355:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.111307' measure-ordering='alphabetic' measure-percentage='0.888693' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country Name:nk]' palette='tableau-20' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;St. Lucia&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Korea, Dem. Rep.&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;St. Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Congo, Rep.&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Kyrgyz Republic&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Macao SAR, China&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;West Bank and Gaza&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Iran, Islamic Rep.&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Lao PDR&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;St. Martin (French part)&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Korea, Rep.&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Yemen, Rep.&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Gambia, The&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Slovak Republic&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Virgin Islands (U.S.)&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Macedonia, FYR&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Micronesia, Fed. Sts.&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Egypt, Arab Rep.&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;St. Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Bahamas, The&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Venezuela, RB&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Congo, Dem. Rep.&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Hong Kong SAR, China&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='GDP'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data by country (Worldbankdata) (2)' name='excel-direct.42012.950994398147' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='excel-direct.42012.950994398147'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Finance: GDP (current US$)]' role='measure' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Finance: GDP (current US$)]' derivation='Sum' name='[sum:Finance: GDP (current US$):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.42012.950994398147].[none:Country Name:nk]'>
            <groupfilter function='level-members' level='[none:Country Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[excel-direct.42012.950994398147].[sum:Finance: GDP (current US$):qk]' included-values='non-null' />
          <slices>
            <column>[excel-direct.42012.950994398147].[none:Country Name:nk]</column>
            <column>[excel-direct.42012.950994398147].[sum:Finance: GDP (current US$):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='499' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[excel-direct.42012.950994398147].[sum:Finance: GDP (current US$):qk]' />
              <text column='[excel-direct.42012.950994398147].[none:Country Name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='GDPPerCapita'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data by country (Worldbankdata) (2)' name='excel-direct.42012.950994398147' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='excel-direct.42012.950994398147'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Finance: GDP per capita (current US$)]' role='measure' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Finance: GDP per capita (current US$)]' derivation='Sum' name='[sum:Finance: GDP per capita (current US$):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[excel-direct.42012.950994398147].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[excel-direct.42012.950994398147].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[excel-direct.42012.950994398147].[Latitude (generated)]</column>
            <column>[excel-direct.42012.950994398147].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[excel-direct.42012.950994398147].[sum:Finance: GDP per capita (current US$):qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[excel-direct.42012.950994398147].[sum:Finance: GDP per capita (current US$):qk]' include-totals='true' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[excel-direct.42012.950994398147].[none:Country Name:nk]' value='false' />
            <format attr='break-on-special' field='[excel-direct.42012.950994398147].[none:Country Name:nk]' value='false' />
            <format attr='show-null-value-warning' field='[excel-direct.42012.950994398147].[none:Country Name:nk]' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='line-pattern-only' value='dashed' />
            <format attr='line-visibility' value='on' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[excel-direct.42012.950994398147].[none:Country Name:nk]' />
              <color column='[excel-direct.42012.950994398147].[sum:Finance: GDP per capita (current US$):qk]' />
              <geometry column='[excel-direct.42012.950994398147].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[excel-direct.42012.950994398147].[Latitude (generated)]</rows>
        <cols>[excel-direct.42012.950994398147].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='GDPYear'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data by country (Worldbankdata) (2)' name='excel-direct.42012.950994398147' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.42012.950994398147'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Finance: GDP (current US$)]' role='measure' type='quantitative' />
            <column-instance column='[Country Name]' derivation='Attribute' name='[attr:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Finance: GDP (current US$)]' derivation='Sum' name='[sum:Finance: GDP (current US$):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year-Trunc' name='[tyr:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[excel-direct.42012.950994398147].[sum:Finance: GDP (current US$):qk]' included-values='non-null' />
          <slices>
            <column>[excel-direct.42012.950994398147].[sum:Finance: GDP (current US$):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.42012.950994398147].[none:Country Name:nk]' />
              <tooltip column='[excel-direct.42012.950994398147].[attr:Country Name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[excel-direct.42012.950994398147].[sum:Finance: GDP (current US$):qk]</rows>
        <cols>[excel-direct.42012.950994398147].[tyr:Date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Population'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data by country (Worldbankdata) (2)' name='excel-direct.42012.950994398147' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='excel-direct.42012.950994398147'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Population: Total (count)]' role='measure' type='quantitative' />
            <column-instance column='[Country Name]' derivation='Attribute' name='[attr:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Population: Total (count)]' derivation='Sum' name='[sum:Population: Total (count):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.42012.950994398147].[none:Country Name:nk]' />
              <size column='[excel-direct.42012.950994398147].[sum:Population: Total (count):qk]' />
              <lod column='[excel-direct.42012.950994398147].[none:Country Name:nk]' />
              <tooltip column='[excel-direct.42012.950994398147].[attr:Country Name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[excel-direct.42012.950994398147].[Latitude (generated)]</rows>
        <cols>[excel-direct.42012.950994398147].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='PopulationAge'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data by country (Worldbankdata) (2)' name='excel-direct.42012.950994398147' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.42012.950994398147'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Population: Ages 0-14 (% of total)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population: Ages 15-64 (% of total)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population: Ages 65+ (% of total)]' role='measure' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Population: Ages 0-14 (% of total)]' derivation='Sum' name='[sum:Population: Ages 0-14 (% of total):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population: Ages 15-64 (% of total)]' derivation='Sum' name='[sum:Population: Ages 15-64 (% of total):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population: Ages 65+ (% of total)]' derivation='Sum' name='[sum:Population: Ages 65+ (% of total):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.42012.950994398147].[none:Country Name:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Country Name:nk]' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Aruba&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[excel-direct.42012.950994398147].[sum:Population: Ages 0-14 (% of total):qk]' included-values='non-null' />
          <slices>
            <column>[excel-direct.42012.950994398147].[sum:Population: Ages 0-14 (% of total):qk]</column>
            <column>[excel-direct.42012.950994398147].[none:Country Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.42012.950994398147].[none:Country Name:nk]' />
            </encodings>
          </pane>
          <pane id='1' x-axis-name='[excel-direct.42012.950994398147].[sum:Population: Ages 0-14 (% of total):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.42012.950994398147].[none:Country Name:nk]' />
            </encodings>
          </pane>
          <pane id='2' x-axis-name='[excel-direct.42012.950994398147].[sum:Population: Ages 15-64 (% of total):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.42012.950994398147].[none:Country Name:nk]' />
            </encodings>
          </pane>
          <pane id='3' x-axis-name='[excel-direct.42012.950994398147].[sum:Population: Ages 65+ (% of total):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.42012.950994398147].[none:Country Name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[excel-direct.42012.950994398147].[none:Country Name:nk]</rows>
        <cols>([excel-direct.42012.950994398147].[sum:Population: Ages 0-14 (% of total):qk] + ([excel-direct.42012.950994398147].[sum:Population: Ages 15-64 (% of total):qk] + [excel-direct.42012.950994398147].[sum:Population: Ages 65+ (% of total):qk]))</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Story' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>World GDP/Population Show</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='1' param='vert' removable='false' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='4461' id='3' type='title' w='100000' x='0' y='0' />
            <zone h='11307' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='100000' x='0' y='4461' />
            <zone h='83817' id='5' paired-zone-id='4' removable='false' type='flipboard' w='100000' x='0' y='15768'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Population of the World' captured-sheet='Population' id='1'>
                    <capturedDeltas>
                      <worksheet name='Population'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[excel-direct.42012.950994398147].[Latitude (generated)]' field-type='quantitative' projection='EPSG:3857' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[excel-direct.42012.950994398147].[Longitude (generated)]' field-type='quantitative' projection='EPSG:3857' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='GDP' captured-sheet='GDP' id='2' />
                  <story-point caption='Population Age' captured-sheet='PopulationAge' id='3' />
                  <story-point caption='GDPYear' captured-sheet='GDPYear' id='4' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='WorldData' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>World GDP Data</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='965' maxwidth='1016' minheight='965' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='1' param='vert' removable='false' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='4561' id='3' type='title' w='100000' x='0' y='0' />
            <zone h='11296' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='100000' x='0' y='4561' />
            <zone h='83728' id='5' paired-zone-id='4' removable='false' type='flipboard' w='100000' x='0' y='15857'>
              <flipboard active-id='6' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='World Population' captured-sheet='Population' id='3'>
                    <capturedDeltas>
                      <worksheet name='Population'>
                        <filter class='quantitative' column='[excel-direct.42012.950994398147].[Latitude (generated)]' included-values='non-null' />
                        <filter class='quantitative' column='[excel-direct.42012.950994398147].[Longitude (generated)]' included-values='non-null' />
                        <style delta-type='added'>
                          <style-rule element='table'>
                            <format attr='break-on-special' field='[excel-direct.42012.950994398147].[none:Country Name:nk]' value='false' />
                            <format attr='omit-on-special' field='[excel-direct.42012.950994398147].[none:Country Name:nk]' value='false' />
                            <format attr='show-null-value-warning' field='[excel-direct.42012.950994398147].[none:Country Name:nk]' value='false' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='GDP and GDPper capita' captured-sheet='WorldGDPDashboard' id='4'>
                    <capturedDeltas>
                      <worksheet name='GDPPerCapita'>
                        <selection-collection>
                          <tuple-selection>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[excel-direct.42012.950994398147].[Longitude (generated)]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[excel-direct.42012.950994398147].[Latitude (generated)]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[excel-direct.42012.950994398147].[none:Country Name:nk]</field>
                                  <field>[excel-direct.42012.950994398147].[sum:Finance: GDP per capita (current US$):qk]</field>
                                  <field>[excel-direct.42012.950994398147].[Geometry (generated)]</field>
                                  <field>[excel-direct.42012.950994398147].[Latitude (generated)]</field>
                                  <field>[excel-direct.42012.950994398147].[Longitude (generated)]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>&quot;China&quot;</value>
                                <value>23937</value>
                                <value>&quot;MULTIPOLYGON (((110.6906 20.1494,110.784 20.0176,110.9323 20.0176,111.0367 19.6386,110.9763 19.6386,110.8609 19.5232,110.806 19.5287,110.762 19.4243,110.6741 19.3859,110.5698 19.1332,110.5698 19.0508,110.5148 18.9903,110.5203 18.7871,110.4654 18.7706,110.4105 18.6607,110.2621 18.6662,110.1083 18.5399,110.0149 18.4135,109.7677 18.3971,109.7183 18.2982,109.7458 18.2542,109.57 18.2103,109.4546 18.2817,109.3118 18.3092,109.18 18.2872,109.1031 18.3641,108.9877 18.3586,108.8284 18.463,108.6856 18.5069,108.6911 18.7376,108.6196 18.8255,108.6581 18.9409,108.6141 19.1002,108.6746 19.1716,108.6306 19.2156,108.6856 19.3749,108.8723 19.4628,109.0042 19.5836,109.18 19.655,109.2074 19.721,109.158 19.7924,109.2624 19.9022,109.3173 19.9187,109.4052 19.8638,109.5205 19.8528,109.5151 19.9132,109.581 19.9846,109.7128 20.0121,109.8666 19.9407,109.938 19.9956,110.0095 19.9297,110.1193 20.0011,110.1578 20.067,110.2567 20.0341,110.3775 20.078,110.5753 20.0231,110.5698 20.0945,110.6906 20.1494)),((110.4215 21.0833,110.5533 21.0503,110.5039 20.9734,110.3555 20.9954,110.3116 21.0778,110.4215 21.0833)),((121.9574 30.1803,122.1003 30.1583,122.2266 30.1033,122.331 30.0209,122.32 29.9495,122.1662 29.9935,122.0289 29.9935,121.9739 30.0594,121.9574 30.1803)),((119.7711 25.6428,119.848 25.5494,119.837 25.4725,119.7052 25.434,119.7272 25.5219,119.6832 25.5988,119.7711 25.6428)),((121.4795 39.6508,121.5345 39.5739,121.4301 39.5079,121.3422 39.5244,121.3202 39.5903,121.4795 39.6508)),((114.227 22.5477,114.218 22.556,114.2088 22.5574,114.1865 22.5547,114.1778 22.5557,114.176 22.5602,114.1601 22.5614,114.1525 22.5551,114.1486 22.5422,114.1294 22.5422,114.1161 22.535,114.1125 22.5297,114.1072 22.5345,114.0969 22.5339,114.0914 22.5375,114.0784 22.5299,114.0849 22.5218,114.0787 22.5155,114.0727 22.5181,114.0603 22.5135,114.0557 22.5028,114.0392 22.5038,114.0265 22.5219,114.0151 22.523,114.0013 22.5269,113.9042 22.5335,113.7779 22.6819,113.7614 22.7533,113.668 22.7423,113.6131 22.8027,113.5856 22.9236,113.4922 22.9455,113.5252 22.8357,113.6131 22.7588,113.5691 22.7423,113.6021 22.6324,113.5527 22.572,113.5691 22.4896,113.5307 22.4017,113.6021 22.3687,113.5856 22.2424,113.5501 22.2222,113.5374 22.2222,113.5292 22.2165,113.5226 22.2274,113.5142 22.2362,113.528 22.1981,113.5168 22.1777,113.4593 22.1655,113.3384 22.193,113.2231 22.0336,113.1132 22.0721,113.1187 22.1875,113.0857 22.2039,113.0033 22.116,113.0308 21.9458,112.9099 21.8524,112.8385 21.9732,112.7451 21.9238,112.6408 21.781,112.5584 21.759,112.4155 21.8414,112.3991 21.737,112.2343 21.704,112.1738 21.8084,112.0145 21.7864,111.8937 21.6766,111.8277 21.6986,111.8442 21.7645,111.7728 21.7864,111.7618 21.6271,111.652 21.5283,111.597 21.5502,111.4817 21.5063,111.4322 21.5502,111.2729 21.4184,111.229 21.4843,111.0752 21.4623,110.8939 21.3854,110.7511 21.3854,110.6302 21.2261,110.4874 21.2206,110.3665 21.0998,110.2072 21.0394,110.1688 20.924,110.2017 20.8471,110.3226 20.8526,110.394 20.7922,110.3281 20.6823,110.405 20.5944,110.4709 20.5834,110.5368 20.479,110.4434 20.3307,110.3061 20.2593,110.1962 20.2758,110.1248 20.2428,110.0644 20.2923,109.938 20.2923,110.0149 20.4516,109.8337 20.5065,109.8337 20.5724,109.7403 20.6658,109.7787 20.7043,109.7623 20.8086,109.7018 20.8306,109.6689 20.9405,109.7128 21.0613,109.6744 21.1108,109.7732 21.2316,109.7677 21.336,109.9161 21.3635,109.9106 21.4733,109.8062 21.5063,109.7458 21.5832,109.7787 21.4898,109.6579 21.5173,109.6744 21.5997,109.5865 21.5832,109.5425 21.5008,109.4381 21.4568,109.158 21.4074,109.0481 21.4623,109.169 21.5283,109.1525 21.5832,108.9602 21.5997,108.7899 21.6436,108.746 21.6052,108.6856 21.704,108.6141 21.715,108.5592 21.7919,108.6141 21.8469,108.5482 21.8908,108.4878 21.8359,108.5757 21.6931,108.4768 21.5612,108.3944 21.5557,108.3669 21.6546,108.3175 21.6766,108.323 21.5887,108.1692 21.6052,108.1362 21.5447,107.9989 21.5447,107.9604 21.5447,107.878 21.6491,107.8231 21.6601,107.6693 21.6052,107.499 21.6162,107.488 21.6601,107.3672 21.6107,107.3067 21.7425,107.2353 21.704,107.087 21.8139,107.0266 21.8249,107.0595 21.9238,106.9991 21.9567,106.8068 21.9787,106.708 22.0282,106.6805 22.182,106.6915 22.2808,106.6585 22.3358,106.5761 22.3413,106.5651 22.4127,106.5926 22.5445,106.7189 22.6104,106.8288 22.8027,106.6585 22.8686,106.6036 22.9291,106.3234 22.8631,106.2191 22.9895,106.0103 22.995,105.9993 22.94,105.884 22.9181,105.7247 23.0664,105.5763 23.0939,105.5324 23.2037,105.439 23.3081,105.4115 23.2916,105.3291 23.3905,105.2193 23.2751,105.0819 23.2642,104.9556 23.1763,104.8183 23.1268,104.8457 22.9675,104.7359 22.8247,104.604 22.8302,104.3678 22.6928,104.2744 22.7423,104.2799 22.8357,104.0986 22.7917,104.0382 22.7148,104.0162 22.5226,103.9668 22.5061,103.824 22.6159,103.6482 22.7972,103.5218 22.594,103.4339 22.7148,103.4449 22.7533,103.3405 22.8192,103.2856 22.6874,103.2032 22.6544,103.1867 22.5665,103.0329 22.4456,102.934 22.4896,102.8846 22.594,102.7033 22.7038,102.577 22.7093,102.5165 22.7807,102.3298 22.5555,102.2529 22.4566,102.2693 22.4182,102.1485 22.4017,102.0331 22.4731,101.8738 22.3852,101.8024 22.4896,101.6871 22.4731,101.6266 22.2808,101.5497 22.2479,101.6047 22.16,101.5772 22.116,101.6211 21.9677,101.7145 21.9293,101.7804 21.8304,101.753 21.726,101.8244 21.6052,101.764 21.5777,101.7804 21.5118,101.742 21.314,101.8464 21.2426,101.731 21.1382,101.6761 21.1987,101.5992 21.1822,101.5607 21.2481,101.3959 21.2261,101.286 21.1767,101.2311 21.314,101.2696 21.3744,101.1982 21.4129,101.2146 21.5612,101.1762 21.5612,101.1487 21.5612,101.1597 21.6711,101.0883 21.77,101.0114 21.7095,100.885 21.6876,100.7257 21.5118,100.5829 21.4514,100.484 21.4568,100.4291 21.5447,100.2533 21.4678,100.127 21.5173,100.105 21.5942,100.1709 21.6656,100.127 21.704,99.9951 21.704,99.9402 21.8249,99.9951 21.9732,99.9622 22.0556,99.8688 22.0282,99.4787 22.138,99.3579 22.0941,99.2151 22.1215,99.1766 22.1875,99.237 22.2534,99.2535 22.3907,99.3634 22.4841,99.3854 22.5775,99.3139 22.7368,99.3908 22.8192,99.5611 22.9346,99.5172 23.0829,99.3249 23.1103,99.1766 23.0939,99.0503 23.1213,99.0338 23.1598,98.891 23.2092,98.9459 23.3081,98.9239 23.418,98.8031 23.5388,98.891 23.6157,98.8525 23.6322,98.8086 23.7695,98.6987 23.786,98.6822 23.9124,98.7756 24.0277,98.9019 24.1101,98.7152 24.1321,98.6108 24.0882,98.5504 24.1321,98.1164 24.0991,97.7923 23.9563,97.7099 23.8684,97.6385 23.8629,97.5396 23.9288,97.7428 24.1101,97.7428 24.2255,97.7813 24.2584,97.6824 24.3024,97.7264 24.3793,97.6934 24.4507,97.5396 24.4342,97.578 24.5606,97.589 24.7638,97.6604 24.7858,97.7428 24.9122,97.7319 25.0824,97.8143 25.1648,97.8527 25.2747,97.9241 25.2143,98.0615 25.3077,98.1603 25.456,98.1274 25.5219,98.2427 25.6153,98.3142 25.5494,98.402 25.5933,98.479 25.7801,98.5394 25.846,98.6438 25.7911,98.7097 25.857,98.6822 25.9394,98.6163 25.9779,98.7426 26.1921,98.6767 26.2415,98.7371 26.3514,98.7536 26.5601,98.7866 26.6206,98.7481 26.714,98.7646 26.7964,98.7042 27.2139,98.7371 27.3512,98.6877 27.4885,98.7042 27.5654,98.5888 27.5709,98.5394 27.6204,98.4405 27.6313,98.4295 27.5544,98.3196 27.5215,98.3032 27.6313,98.2263 27.7192,98.2263 27.8126,98.1768 27.8401,98.1988 27.9335,98.1439 27.95,98.1603 28.1038,98.1327 28.1545,98.0314 28.1923,98.0261 28.2459,97.9121 28.3675,97.7965 28.332,97.7379 28.4227,97.721 28.4982,97.6658 28.5352,97.5639 28.5435,97.5066 28.4938,97.5216 28.4476,97.4815 28.3788,97.5027 28.3373,97.4627 28.2741,97.3473 28.2081,97.1462 28.3532,97.0782 28.3713,96.9769 28.3297,96.8893 28.3856,96.8614 28.4854,96.767 28.5148,96.7451 28.5715,96.6136 28.6138,96.495 28.6092,96.5358 28.681,96.6212 28.7354,96.5177 28.8864,96.5215 28.9303,96.5079 28.9469,96.4406 28.9529,96.4346 29.0066,96.3681 29.0383,96.3681 29.1085,96.2616 29.0889,96.2133 29.0277,96.1831 29.1108,96.3017 29.1773,96.2624 29.243,96.1831 29.2717,96.1392 29.3427,96.0539 29.3827,95.9655 29.3759,95.8484 29.3163,95.8386 29.3533,95.757 29.3223,95.7087 29.2037,95.6097 29.2347,95.5002 29.1818,95.5093 29.1267,95.2993 29.1365,95.2728 29.1055,95.1361 29.0881,95.0968 29.1418,94.9941 29.144,94.7516 29.2294,94.6935 29.3178,94.5409 29.2196,94.4571 29.2128,94.3793 29.1538,94.2931 29.1523,94.2758 29.1131,94.3302 29.039,94.2607 28.9318,94.1783 28.9363,94.136 28.8902,93.9751 28.8215,93.8966 28.7573,93.7901 28.7369,93.707 28.6644,93.6231 28.6885,93.4486 28.6689,93.3308 28.6062,93.185 28.4944,93.1473 28.366,92.932 28.2489,92.9214 28.2006,92.7907 28.1877,92.6774 28.1507,92.6585 28.0744,92.7318 28.0548,92.7326 27.9861,92.6464 27.9128,92.478 27.8342,92.3194 27.7972,92.2937 27.8705,92.2129 27.8727,91.9236 27.7179,91.8503 27.7625,91.6433 27.761,91.5708 27.8478,91.6259 27.8894,91.4904 27.9677,91.3203 28.0637,91.2491 28.0637,91.1992 27.9882,91.1187 27.9939,91.0208 28.0221,90.9201 28.0488,90.8377 28.0433,90.7799 28.0419,90.6878 28.079,90.5835 28.0231,90.5042 28.0654,90.4846 28.1356,90.5473 28.1575,90.5737 28.2451,90.3479 28.3041,90.2686 28.2791,90.2119 28.36,90.1809 28.3207,90.0593 28.3456,89.9823 28.3154,89.8659 28.3124,89.7655 28.1824,89.5963 28.1636,89.4589 28.0049,89.3893 27.8901,89.3655 27.8676,89.2979 27.8524,89.2254 27.7836,89.2284 27.7345,89.128 27.6152,89.0531 27.608,88.978 27.5313,88.9515 27.4108,89.0043 27.3261,88.9232 27.325,88.8879 27.3403,88.8379 27.3792,88.7828 27.4543,88.7741 27.544,88.8485 27.668,88.8568 27.8153,88.8817 27.8916,88.8364 28.0155,88.7548 28.0805,88.6672 28.0767,88.6332 28.1228,88.5652 28.0903,88.5448 28.0344,88.4093 27.9821,88.251 27.9422,88.135 27.95,88.135 27.8785,87.9843 27.8869,87.8314 27.9514,87.7245 27.8048,87.6135 27.8123,87.5855 27.8531,87.4518 27.8229,87.4246 27.8607,87.3604 27.8282,87.2652 27.8501,87.2267 27.8206,87.1096 27.8478,87.0379 27.9506,86.9336 27.9619,86.8724 28.0231,86.7901 28.0193,86.7486 28.0986,86.5778 28.1135,86.5355 28.051,86.5144 27.9573,86.4419 27.906,86.2908 27.9777,86.2266 27.9815,86.1904 28.1707,86.0831 28.0903,86.0808 28.0155,86.1246 27.9271,86.065 27.8999,85.9471 27.9422,85.9773 27.9898,85.901 28.0533,85.8973 28.1107,85.8164 28.2028,85.7507 28.2361,85.7122 28.3856,85.5913 28.3078,85.4365 28.3343,85.3768 28.2776,85.2552 28.2935,85.2038 28.3403,85.1192 28.329,85.1087 28.3479,85.1004 28.4589,85.1479 28.4876,85.1978 28.6274,85.1147 28.687,85.0581 28.6825,84.9818 28.5911,84.8579 28.5715,84.6962 28.6364,84.6252 28.7369,84.4923 28.7354,84.4371 28.7694,84.4092 28.8509,84.2256 28.8932,84.2491 29.0368,84.1894 29.0473,84.2 29.1251,84.1214 29.2739,83.9628 29.3306,83.814 29.3027,83.8019 29.2551,83.7127 29.2445,83.6334 29.1584,83.5179 29.2181,83.4166 29.357,83.4136 29.422,83.2814 29.499,83.261 29.5776,83.15 29.6244,83.0699 29.6093,83.0088 29.6743,82.9566 29.6622,82.9143 29.7075,82.8275 29.6902,82.7515 29.7628,82.7021 29.8397,82.6401 29.8337,82.5623 29.9553,82.4974 29.9477,82.3969 30.0233,82.3637 30.0097,82.2466 30.0746,82.1665 30.0761,82.2058 30.1539,82.0993 30.2401,82.1061 30.3488,81.9951 30.3209,81.6181 30.444,81.5645 30.4297,81.5517 30.3722,81.4081 30.4206,81.4225 30.3043,81.3953 30.2068,81.2629 30.1418,81.2519 30.0539,81.245 30.0112,81.1332 30.0157,81.0916 30.0535,81.0833 30.1494,81.035 30.1978,81.0312 30.2476,80.927 30.2673,80.9073 30.3035,80.8016 30.3232,80.7343 30.401,80.6067 30.4712,80.5485 30.4485,80.4103 30.5248,80.2086 30.5883,80.1928 30.6661,80.2486 30.7197,80.1792 30.8058,80.1082 30.7817,80.0538 30.8391,79.9337 30.8791,79.8763 30.966,79.8559 30.9758,79.7524 31.006,79.6005 30.9388,79.5069 31.0324,79.4208 31.0559,79.4125 31.0725,79.4132 31.1072,79.3112 31.1495,79.3007 31.219,79.2266 31.2606,79.2501 31.2938,79.142 31.432,79.0748 31.4592,79.0106 31.3829,78.9449 31.3663,78.8837 31.2862,78.7689 31.3255,78.753 31.3852,78.7968 31.4441,78.7251 31.4849,78.7311 31.5325,78.8467 31.608,78.7598 31.6753,78.7024 31.8067,78.7681 31.9457,78.6835 32.1126,78.5967 32.1579,78.4886 32.2758,78.472 32.4412,78.4124 32.5175,78.4161 32.5673,78.5166 32.6142,78.611 32.5998,78.7228 32.6746,78.7817 32.6164,78.7576 32.5673,78.8135 32.4336,78.9683 32.3354,78.991 32.3717,79.1043 32.374,79.1315 32.4812,79.2485 32.5167,79.2757 32.5568,79.4049 32.5198,79.4525 32.6036,79.5386 32.6716,79.5575 32.7592,79.4804 32.8007,79.4714 32.8785,79.3656 32.9382,79.3286 33.0342,79.3649 33.0931,79.3747 33.1195,79.4102 33.1701,79.2168 33.2381,79.1519 33.1822,79.1451 33.186,79.0718 33.2245,79.0204 33.325,78.9351 33.3869,78.8361 33.4269,78.7326 33.569,78.7175 33.6233,78.7764 33.745,78.7425 34.0003,78.6563 34.032,78.6571 34.0743,78.7425 34.0924,78.8618 34.1657,78.926 34.1544,78.9849 34.3001,79.0574 34.2994,79.0068 34.4067,78.932 34.3802,78.7387 34.4595,78.71 34.526,78.6375 34.5434,78.5634 34.5094,78.5521 34.5713,78.4592 34.5691,78.29 34.6151,78.2711 34.7012,78.2084 34.7209,78.1857 34.7942,78.2371 34.8697,78.1774 34.9301,78.1465 35.0706,78.003 35.2406,78.0226 35.3584,78.0906 35.4226,78.1072 35.4392,78.0762 35.4959,78.0264 35.4694,77.9244 35.4974,77.9108 35.4619,77.8126 35.5223,77.6872 35.4536,77.5037 35.4891,77.4425 35.4619,77.3397 35.5178,77.3027 35.5457,77.194 35.5216,77.0618 35.6001,76.9182 35.6115,76.8533 35.6689,76.777 35.6583,76.6788 35.755,76.6153 35.7618,76.561 35.8222,76.5987 35.9,76.2988 35.8426,76.2732 35.8418,76.1651 35.823,76.1448 35.8373,76.1591 35.9174,76.1009 36.0163,76.0035 36.0171,75.9423 36.0707,75.9325 36.1357,76.0126 36.1727,75.9846 36.3502,76.0352 36.4091,75.9257 36.573,75.9423 36.5957,75.8041 36.7105,75.6893 36.7581,75.6485 36.7672,75.6213 36.7687,75.5699 36.7672,75.4687 36.7166,75.4211 36.7732,75.4204 36.8895,75.375 36.9469,75.2338 36.959,75.0291 37.0164,74.9173 36.9787,74.9135 36.9333,74.8984 36.9349,74.841 37.0429,74.8214 37.0542,74.739 37.0217,74.6975 37.0837,74.5804 37.0308,74.4958 37.0648,74.4558 37.1426,74.4951 37.1733,74.5011 37.2393,74.6582 37.2347,74.7496 37.2846,74.8093 37.2151,74.8932 37.2325,74.915 37.237,74.9105 37.2748,75.128 37.3246,75.094 37.3715,75.1537 37.4092,75.1323 37.4369,75.0554 37.5248,75.0313 37.5006,74.9324 37.5679,74.8969 37.6615,75.011 37.7763,74.9128 37.8564,74.9165 38.0248,74.8206 38.0853,74.804 38.1986,74.6982 38.228,74.7058 38.2824,74.6658 38.3806,74.6952 38.4252,74.5064 38.4713,74.2843 38.5982,74.1211 38.642,74.0721 38.5301,73.9238 38.5356,73.8039 38.6118,73.8054 38.6639,73.7442 38.7319,73.7669 38.7787,73.6981 38.852,73.757 38.9426,73.8341 38.9207,73.8537 38.9524,73.8129 39.0423,73.751 39.0257,73.6143 39.247,73.5614 39.25,73.5259 39.3913,73.5924 39.4117,73.5984 39.4578,73.6601 39.464,73.8213 39.4593,73.8636 39.4789,73.9414 39.6028,73.9149 39.7146,73.8304 39.7716,73.9127 39.8634,73.9104 39.9095,73.9814 40.0001,73.9504 40.0273,74.0282 40.084,74.0758 40.0742,74.2631 40.1248,74.3402 40.084,74.5237 40.2041,74.5857 40.2743,74.6801 40.2645,74.6945 40.3423,74.8017 40.3506,74.8629 40.3174,74.9082 40.3461,74.7896 40.4465,74.8251 40.5227,74.8347 40.5239,74.9877 40.4507,75.2202 40.4418,75.4022 40.5546,75.4604 40.6089,75.5933 40.6588,75.6409 40.507,75.7201 40.4857,75.715 40.4375,75.6432 40.3831,75.6998 40.2773,75.8245 40.3374,75.8959 40.3045,75.9673 40.3759,76.0881 40.3812,76.187 40.3814,76.2781 40.4331,76.3351 40.3382,76.4454 40.3929,76.5375 40.4647,76.5338 40.5123,76.6485 40.6286,76.6728 40.6943,76.641 40.7623,76.7022 40.7887,76.7299 40.875,76.7551 40.9534,76.8533 40.9768,76.8797 41.0274,76.9968 41.072,77.0844 41.0629,77.1849 41.0108,77.2755 41.0017,77.3548 41.041,77.478 40.9957,77.6872 41.0032,77.8776 41.0735,77.9833 41.078,78.0596 41.0327,78.1903 41.0788,78.2195 41.1449,78.2745 41.2109,78.3843 41.2713,78.3897 41.4081,78.5279 41.4398,78.5551 41.4746,78.645 41.4686,78.713 41.5532,78.815 41.5584,78.9366 41.64,79.1254 41.7231,79.2176 41.7269,79.3226 41.8107,79.4102 41.8409,79.6043 41.8561,79.6398 41.8938,79.7735 41.8938,79.88 42.0336,80.0251 42.0487,80.1391 42.0305,80.2262 42.0626,80.1481 42.1176,80.1316 42.168,80.1736 42.2129,80.1784 42.2209,80.2713 42.2262,80.2842 42.3191,80.2267 42.3591,80.2048 42.4279,80.2191 42.4853,80.2576 42.5018,80.1618 42.6318,80.223 42.7126,80.2622 42.8297,80.3272 42.8237,80.4004 42.8259,80.5886 42.8901,80.3808 43.0223,80.4114 43.0566,80.5927 43.1335,80.7245 43.1335,80.8014 43.1775,80.7789 43.3116,80.6837 43.3283,80.7532 43.4657,80.5228 43.823,80.5092 43.9069,80.4526 43.9847,80.445 44.0746,80.3944 44.1116,80.4058 44.2914,80.3491 44.4787,80.4111 44.6094,80.337 44.6894,80.2381 44.7212,80.1467 44.8277,79.9933 44.7952,79.914 44.9009,80.0923 45.0482,80.2411 45.0278,80.3189 45.0709,80.402 45.049,80.4934 45.1215,80.6059 45.1102,80.73 45.1716,80.8545 45.1283,80.9519 45.1668,81.075 45.1744,81.1128 45.2197,81.4527 45.2688,81.6264 45.3541,81.7692 45.3768,81.9225 45.2295,82.0457 45.2537,82.0993 45.2046,82.2405 45.2356,82.3066 45.2265,82.4717 45.1766,82.582 45.2182,82.5865 45.3428,82.5412 45.4214,82.4165 45.4737,82.27 45.5505,82.2572 45.6185,82.3471 45.8028,82.3335 45.9388,82.4543 45.9766,82.5125 46.1563,82.6582 46.3911,82.7627 46.5791,82.7784 46.6851,82.8902 46.8762,82.9309 47.0114,82.98 47.0311,82.9933 47.0558,83.0307 47.2123,83.1749 47.2237,83.2444 47.1784,83.3434 47.1761,83.5556 47.0681,84.0383 46.9653,84.2151 46.9993,84.4205 47.0107,84.5074 46.9782,84.7045 46.9963,84.7841 46.9074,84.806 46.825,84.9599 46.869,84.9825 46.9193,85.0701 46.9329,85.2197 47.0515,85.5294 47.0598,85.5762 47.1904,85.6903 47.2184,85.7069 47.3755,85.6034 47.5198,85.6216 47.6074,85.5415 47.9398,85.5808 48.1392,85.7356 48.3711,85.8406 48.4255,86.0498 48.4474,86.2145 48.4353,86.318 48.501,86.4479 48.4987,86.5884 48.5433,86.6337 48.6249,86.7629 48.7148,86.7516 48.7941,86.8105 48.85,86.7387 48.9059,86.7229 48.9905,86.8294 49.0501,86.8551 49.1076,86.9857 49.103,87.1346 49.1506,87.2214 49.1144,87.3126 49.0997,87.4382 49.0847,87.701 49.1707,87.8329 49.1762,87.8548 49.0444,87.9153 48.9949,87.767 48.9345,87.7505 48.885,87.9247 48.7624,88.0002 48.7624,88.0735 48.6913,88.0145 48.6551,88.004 48.566,88.3499 48.4708,88.4172 48.3907,88.4935 48.4156,88.6015 48.3439,88.5841 48.2344,88.7941 48.2162,88.9452 48.0878,89.023 48.0946,89.0705 48.047,89.0713 47.9466,89.1929 47.9503,89.3183 48.0281,89.5661 48.0485,89.6174 47.9458,89.7255 47.8922,89.7965 47.8181,89.9302 47.8166,89.9641 47.8846,90.0752 47.8529,90.0797 47.766,90.1432 47.723,90.3237 47.6671,90.3267 47.6225,90.4566 47.4873,90.4914 47.38,90.4755 47.3241,90.5178 47.2441,90.7346 47.0016,90.8812 46.9767,90.9146 46.9514,90.9658 46.8619,90.9537 46.8271,91.063 46.7097,91.03 46.6053,91.0794 46.5614,90.9733 46.361,90.8962 46.3053,91.0118 46.1239,91.0217 46.0226,90.8479 45.8874,90.7127 45.725,90.6689 45.4863,90.7671 45.432,90.8328 45.299,90.8963 45.2476,90.8645 45.2038,90.931 45.1925,91.1221 45.2144,91.2415 45.1321,91.3857 45.1117,91.4371 45.1547,91.5587 45.0686,91.6909 45.0618,91.8004 45.0815,92.0996 45.0754,92.2348 45.0135,92.3065 45.0256,92.4803 45.0006,92.7756 45.0497,92.9297 45.0157,93.1737 45.0127,93.5083 44.9651,93.6481 44.9206,93.8157 44.8224,94.1972 44.6622,94.306 44.5897,94.3339 44.5232,94.4465 44.5029,94.5756 44.4485,94.6957 44.348,94.9307 44.2891,94.9903 44.2543,95.1898 44.2649,95.4081 44.2944,95.415 44.2505,95.3721 44.2256,95.3227 44.027,95.5236 44.0005,95.6218 43.8517,95.7336 43.5972,95.8569 43.4113,95.8779 43.2761,95.9089 43.2354,96.3591 42.8992,96.3855 42.724,96.6936 42.7325,96.9353 42.7105,97.1496 42.7765,97.3803 42.749,97.7538 42.7105,98.0175 42.6831,98.2482 42.6391,98.5119 42.6336,99.292 42.5842,99.4952 42.5677,99.9951 42.6501,100.2808 42.6281,100.3247 42.6831,100.9125 42.6446,101.8189 42.4743,102.0606 42.2161,102.4122 42.1392,102.7418 42.1337,102.978 42.0239,103.3241 41.9085,103.8624 41.8096,104.0272 41.8096,104.5436 41.8865,104.5326 41.6613,104.9446 41.6448,105.0325 41.5679,105.2742 41.7437,105.3072 41.7327,105.8016 41.958,106.0103 42.0184,106.686 42.2601,107.2683 42.359,107.2957 42.4084,107.4551 42.4633,107.5539 42.4249,107.911 42.4139,108.0319 42.4414,108.2571 42.4524,108.5263 42.4579,108.7844 42.4084,108.8119 42.3864,108.9657 42.4579,109.2898 42.4304,109.548 42.4743,109.8337 42.6227,110.1523 42.6391,110.416 42.771,110.4544 42.8589,110.6192 42.9303,110.7016 43.0566,110.817 43.128,111.0477 43.3423,111.3718 43.4412,111.4377 43.4961,111.5696 43.5071,111.7124 43.6169,111.7618 43.6939,111.9706 43.7378,112.009 43.8037,111.8497 43.996,111.6684 44.0344,111.5091 44.1883,111.3938 44.3201,111.3883 44.3915,111.5146 44.5893,111.5641 44.7376,111.7399 44.9628,111.8662 45.0672,112.0859 45.0782,112.4155 45.0617,112.5968 44.9408,112.8275 44.8584,112.8989 44.8639,113.1187 44.798,113.4977 44.7925,113.5746 44.7541,114.0471 44.9518,114.3767 45.1661,114.4865 45.2869,114.5469 45.3968,114.7502 45.4517,115.0633 45.3693,115.338 45.3858,115.5797 45.4297,115.7225 45.4407,115.7665 45.5012,115.9368 45.611,116.0906 45.6824,116.1675 45.6769,116.2719 45.7593,116.2609 45.9516,116.3652 46.067,116.6069 46.2977,116.6893 46.3087,116.7663 46.3142,116.8596 46.3801,116.9365 46.3526,117.365 46.3471,117.4364 46.5778,117.6012 46.5833,117.7001 46.5064,117.8539 46.5339,117.8814 46.5778,118.0407 46.6328,118.2714 46.7866,118.5626 46.7701,118.6724 46.8031,118.7988 46.7811,118.9361 46.8196,119.0954 46.7811,119.1284 46.7207,119.2163 46.6822,119.3261 46.6932,119.436 46.6493,119.4525 46.5504,119.4031 46.457,119.5129 46.4185,119.5953 46.5504,119.7766 46.6218,119.837 46.7042,119.9194 46.7426,119.8041 46.9239,119.87 47.1601,119.8151 47.27,119.7546 47.314,119.5569 47.3469,119.48 47.3304,119.3207 47.4348,119.3371 47.5337,119.1888 47.5172,119.1229 47.704,118.7768 47.8084,118.4802 48.0006,118.0737 48.0391,117.8375 48.0226,117.7605 47.9896,117.5573 47.7864,117.4694 47.7479,117.376 47.6381,117.1068 47.8084,116.8816 47.9017,116.6619 47.8633,116.6124 47.8358,116.4476 47.8413,116.2554 47.8743,116.14 47.8358,115.9368 47.6765,115.5522 47.9457,115.5742 48.0665,115.5193 48.1819,115.8104 48.2588,115.8324 48.3357,115.8214 48.5335,116.1125 48.7917,116.0576 48.885,116.4202 49.4344,116.6839 49.8189,116.7663 49.8244,117.0135 49.6926,117.2881 49.6321,117.5738 49.6376,117.8759 49.5388,118.1616 49.6596,118.2385 49.731,118.3813 49.775,118.3868 49.8244,118.4857 49.8354,118.5626 49.9233,118.9306 49.9837,119.0844 49.9837,119.2657 50.0771,119.3097 50.154,119.3426 50.3463,119.1559 50.3573,119.2547 50.4836,119.2767 50.6045,119.4305 50.6924,119.5074 50.7912,119.4909 50.8407,119.6173 51.0055,119.6887 51.0165,119.7491 51.0989,119.7766 51.2252,119.87 51.2966,119.9029 51.39,119.9853 51.4504,120.0897 51.6757,120.1721 51.6812,120.4742 51.8844,120.6445 51.9284,120.683 52.0327,120.7764 52.1591,120.7544 52.2525,120.6226 52.3129,120.6775 52.4282,120.683 52.5106,120.4523 52.6425,120.26 52.615,120.1886 52.5766,120.0623 52.5821,120.0238 52.6315,120.0238 52.7578,120.282 52.8622,120.5292 53.071,120.6281 53.1039,120.683 53.1753,120.8753 53.2852,121.1225 53.2742,121.4081 53.3237,121.8146 53.417,122.0234 53.4225,122.1387 53.4665,122.3145 53.4994,122.4409 53.4445,122.6441 53.461,122.8309 53.4555,123.0396 53.5104,123.111 53.4994,123.2758 53.5599,123.4406 53.5324,123.5835 53.5489,123.6769 53.4885,123.8581 53.483,124.1163 53.3456,124.2482 53.3676,124.3745 53.2468,124.5283 53.1973,124.7041 53.1863,124.8305 53.1314,124.9843 53.1918,125.1985 53.1918,125.4842 53.0929,125.5776 53.082,125.7369 52.9776,125.6545 52.9062,125.6709 52.8567,125.7753 52.8952,125.9676 52.7633,126.05 52.7963,126.05 52.67,125.9731 52.659,126.006 52.5821,126.072 52.5985,126.1928 52.5326,126.3411 52.3953,126.3411 52.2525,126.2972 52.2085,126.4675 52.1701,126.5554 52.1096,126.5059 52.0272,126.4455 52.0217,126.462 51.9448,126.6707 51.7251,126.7366 51.6317,126.6927 51.5768,126.83 51.5273,126.7861 51.4504,126.885 51.401,126.9784 51.3076,126.896 51.1868,126.9234 51.0604,127.1102 50.9341,127.3574 50.5825,127.286 50.4781,127.3574 50.4232,127.3299 50.3573,127.3958 50.2804,127.5716 50.2419,127.5881 50.1595,127.5002 50.0606,127.4947 49.9782,127.5387 49.9233,127.5167 49.8354,127.665 49.764,127.698 49.6651,127.8024 49.5937,127.9452 49.6157,128.066 49.5442,128.2583 49.5003,128.3846 49.5882,128.533 49.5992,128.7088 49.5662,128.7747 49.4728,128.879 49.4783,128.9944 49.4509,129.0493 49.374,129.1317 49.352,129.2032 49.4014,129.3405 49.352,129.3844 49.4289,129.5218 49.4124,129.5492 49.2916,129.6701 49.2916,129.736 49.2092,129.8459 49.1652,129.9063 49.0553,130.2579 48.8631,130.4446 48.9015,130.5161 48.8521,130.6259 48.8796,130.6369 48.8136,130.527 48.6378,130.5875 48.5939,130.6204 48.484,130.7578 48.495,130.7303 48.4401,130.8237 48.3028,130.7523 48.1874,130.6534 48.0995,130.6809 48.0446,130.8621 47.9347,130.95 47.8193,130.9555 47.7205,131.0324 47.6875,131.1588 47.693,131.2522 47.7314,131.4994 47.726,131.5818 47.66,131.6971 47.7095,131.8015 47.671,131.9663 47.6655,131.9993 47.704,132.2465 47.704,132.3179 47.7534,132.5046 47.7095,132.598 47.7424,132.5925 47.7919,132.6914 47.9512,132.7848 47.9292,132.8782 48.0006,133.01 48.0171,133.1584 48.105,133.3451 48.105,133.466 48.0665,133.5539 48.116,133.8011 48.1984,133.8725 48.1874,133.8945 48.2588,134.0098 48.2808,134.0483 48.3357,134.3889 48.3852,134.5756 48.3632,134.713 48.2753,134.669 48.1654,134.5482 48.0226,134.5866 47.9072,134.658 47.8908,134.6745 47.8248,134.7734 47.7534,134.7514 47.6765,134.669 47.5831,134.4932 47.4458,134.3339 47.4348,134.1856 47.3304,134.1472 47.248,134.2241 47.1821,134.2131 47.1052,134.1362 47.0887,134.0648 46.9734,134.0208 46.8196,134.0483 46.7756,133.9988 46.6383,133.9109 46.5833,133.8505 46.4625,133.9439 46.3911,133.878 46.3581,133.9109 46.2647,133.7022 46.1604,133.7352 46.045,133.6637 45.9406,133.466 45.8308,133.477 45.655,133.3177 45.4957,133.2133 45.5121,133.1364 45.4188,133.0869 45.2814,133.1309 45.1331,132.9496 45.0177,132.8617 45.0562,132.8374 45.0616,132.8039 45.1764,132.7312 45.2439,132.57 45.3063,132.331 45.3427,132.1023 45.3063,132.0063 45.2469,131.9993 45.2485,131.9114 45.3309,131.829 45.3089,131.763 45.21,131.6806 45.2155,131.6861 45.1166,131.4719 44.9573,131.3456 44.9793,131.2906 44.9298,131.1478 44.9353,130.9555 44.8529,131.1038 44.6936,131.2906 44.0784,131.2027 43.7817,131.2302 43.6334,131.1972 43.5236,131.2851 43.4741,131.3071 43.3972,131.1917 43.2104,131.2027 43.1335,131.0984 43.0182,131.1368 42.9577,131.0214 42.9193,131.016 42.8534,130.8237 42.8699,130.7688 42.8314,130.6864 42.8424,130.5435 42.8094,130.4062 42.7215,130.5325 42.6996,130.6204 42.6227,130.56 42.5348,130.6149 42.4304,130.56 42.4524,130.4996 42.6172,130.3787 42.6007,130.2524 42.7051,130.2249 42.7875,130.2579 42.9028,130.1425 42.8973,130.1096 42.9468,129.9502 42.9797,129.8514 42.9632,129.7635 42.7105,129.7415 42.4633,129.6261 42.4633,129.5492 42.359,129.4449 42.4414,129.313 42.4249,129.2361 42.3755,129.2526 42.3205,129.1812 42.2326,129.2141 42.2107,129.0109 42.0953,128.9175 42.0129,128.7417 42.0404,128.5714 41.9964,128.4396 42.0294,128.2363 42.0294,128.066 41.9635,128.1045 41.7987,128.1539 41.7272,128.2748 41.6503,128.3132 41.5844,128.2034 41.4086,128.11 41.3647,127.9287 41.4526,127.8628 41.4031,127.5552 41.4306,127.5442 41.4745,127.3519 41.4636,127.264 41.513,127.1157 41.546,127.1212 41.6229,127.0553 41.6613,127.0443 41.7437,126.9289 41.8096,126.7971 41.6943,126.6213 41.6723,126.5609 41.6119,126.5883 41.5624,126.5004 41.4306,126.5279 41.3647,126.407 41.3207,126.2862 41.1614,126.1598 41.0845,126.0335 40.9252,125.9346 40.8758,125.8687 40.9032,125.7039 40.8648,125.4128 40.656,125.3249 40.6396,125.182 40.6011,125.0117 40.5297,125.0227 40.4583,124.8964 40.4803,124.7371 40.3649,124.7206 40.3209,124.5228 40.2276,124.3361 40.0628,124.3525 39.9913,124.2262 39.9199,124.2042 39.8595,123.9955 39.8156,123.8581 39.854,123.7867 39.8265,123.6109 39.843,123.4352 39.7332,123.4022 39.7826,123.3033 39.7771,123.2758 39.6947,123.133 39.6617,122.9902 39.6672,122.9353 39.6178,122.7924 39.5848,122.4848 39.4145,122.3914 39.42,122.298 39.3706,122.2376 39.2772,122.1113 39.2058,122.0948 39.1234,121.9629 39.03,121.897 39.074,121.7926 39.019,121.7212 39.0355,121.5839 38.8817,121.496 38.8213,121.3367 38.8213,121.2049 38.7224,121.1389 38.7224,121.095 38.9256,121.2268 38.9311,121.3422 38.9751,121.3752 39.0575,121.4576 39.0135,121.6608 39.0795,121.6278 39.2772,121.7542 39.3212,121.7542 39.3761,121.5235 39.3596,121.4466 39.4805,121.5509 39.5903,121.5509 39.6727,121.4576 39.7387,121.54 39.8595,121.6114 39.8595,121.6993 39.9254,121.7762 39.9144,122.0344 40.1891,122.1058 40.2331,122.287 40.4857,122.1442 40.6011,122.1168 40.678,122.0344 40.7384,121.8586 40.8153,121.8036 40.9142,121.7652 40.8483,121.5564 40.8428,121.4905 40.9032,121.1774 40.9252,121.062 40.8208,120.9741 40.8318,120.9192 40.7659,120.9357 40.689,120.8368 40.678,120.7929 40.5956,120.6226 40.4803,120.5566 40.3539,120.4962 40.3209,120.4468 40.1946,119.9414 40.0518,119.848 39.9859,119.5239 39.8815,119.5294 39.8101,119.4635 39.8101,119.3591 39.7441,119.2437 39.475,119.2987 39.4365,119.0844 39.2497,119.0075 39.2003,118.7933 39.1289,118.5681 39.1564,118.3319 39.0025,118.1835 39.0849,118.0847 39.2003,118.0077 39.2058,117.9144 39.1948,117.7496 39.0849,117.7825 38.9861,117.7166 38.9696,117.5738 38.7718,117.5573 38.618,117.7001 38.3763,117.8155 38.2609,117.8649 38.2719,118.0901 38.1401,118.3868 38.1456,118.5681 38.1071,118.5736 38.1401,118.8372 38.2115,118.8482 38.0961,118.9251 38.0687,119.002 37.9588,119.0295 37.8599,119.002 37.805,119.0789 37.7006,118.9746 37.6072,118.9526 37.5029,118.9965 37.2941,119.1229 37.2117,119.2822 37.1568,119.7381 37.1403,119.881 37.2337,119.9414 37.4095,120.1447 37.4754,120.2985 37.5908,120.2875 37.6787,120.4468 37.7501,120.5731 37.7556,120.7434 37.8325,120.9357 37.8215,120.9357 37.7775,121.0456 37.7061,121.1389 37.7116,121.1444 37.6017,121.2433 37.5743,121.3642 37.5853,121.4685 37.4699,121.5729 37.426,121.6663 37.4589,121.941 37.4699,122.1168 37.5523,122.1717 37.4315,122.2431 37.4644,122.3255 37.4095,122.5672 37.3985,122.6057 37.3765,122.5507 37.2776,122.6002 37.2117,122.4903 37.1568,122.4573 37.0744,122.5452 36.9755,122.342 36.8327,122.1827 36.8766,122.1662 36.9535,122.0453 36.9371,122.0014 36.9975,121.919 36.9316,121.6663 36.8217,121.5894 36.8547,121.3587 36.7173,121.1444 36.6844,121.0181 36.58,120.9192 36.569,120.9632 36.4756,120.8808 36.3767,120.8368 36.4646,120.7105 36.4427,120.6775 36.2504,120.6885 36.1295,120.5457 36.1131,120.4248 36.0581,120.304 36.0856,120.3699 36.2119,120.293 36.2614,120.2655 36.179,120.2216 36.2284,120.1117 36.19,120.0952 36.1076,120.1886 36.0581,120.1886 35.9043,120.0677 35.8823,120.0128 35.723,119.9524 35.767,119.9194 35.6516,119.8645 35.6077,119.7436 35.6296,119.6448 35.5582,119.5624 35.3769,119.4085 35.2671,119.3701 35.1078,119.2822 35.0858,119.2218 35.0583,119.1778 34.8551,119.2273 34.7782,119.4525 34.7397,119.4745 34.6628,119.5569 34.6024,119.7931 34.498,119.7931 34.4705,119.9469 34.4541,120.271 34.3112,120.3314 34.1135,120.3918 33.9981,120.4083 33.8333,120.5182 33.7344,120.5292 33.6081,120.6116 33.4817,120.5951 33.3664,120.7654 33.1357,120.7929 33.0423,120.8862 33.0203,120.9082 32.883,120.8808 32.7896,120.9302 32.6962,120.9027 32.6138,120.9961 32.5424,121.0785 32.5259,121.3642 32.3941,121.4026 32.2567,121.3642 32.2403,121.4246 32.1139,121.529 32.1084,121.7267 32.0315,121.8311 31.9107,121.9025 31.7678,121.8696 31.6854,121.6333 31.7349,121.474 31.8283,121.3037 31.8832,121.084 31.7953,120.9357 31.8228,120.9082 31.9161,120.8093 32.015,120.5347 32.0919,120.4358 32.059,120.4523 32.0205,120.6116 31.9876,120.7214 31.9931,120.8148 31.8667,120.8038 31.7898,121.0016 31.7568,121.2213 31.6305,121.3312 31.4987,121.7048 31.2954,121.8146 31.1361,121.9135 30.9383,121.8531 30.8614,121.518 30.8285,121.3312 30.7021,121.2708 30.7021,121.1389 30.6032,121.0291 30.5813,120.9357 30.4824,120.9137 30.3725,120.7599 30.3505,120.6555 30.4055,120.6116 30.3615,120.6665 30.2132,120.6665 30.1308,120.8478 30.1308,121.084 30.2791,121.1994 30.3231,121.3477 30.3066,121.5015 30.1857,121.6278 30.0155,121.7926 29.9715,121.941 29.8891,121.9904 29.8177,121.8696 29.7573,121.8586 29.6968,121.7102 29.5705,121.5235 29.5101,121.518 29.4606,121.7212 29.543,121.7707 29.4716,121.8421 29.5375,121.7926 29.6089,121.9245 29.6474,121.9959 29.587,121.919 29.5265,121.9794 29.4387,121.919 29.4222,121.908 29.3013,121.9629 29.2629,121.9355 29.1969,121.8421 29.164,121.6224 29.1969,121.5949 29.2739,121.4521 29.1585,121.4576 29.1091,121.5784 29.12,121.6333 29.0926,121.6773 28.8564,121.6333 28.7245,121.507 28.6586,121.5894 28.4773,121.5949 28.3675,121.6553 28.3235,121.6169 28.2576,121.5784 28.307,121.463 28.3345,121.3806 28.2356,121.3587 28.1422,121.2708 28.1972,121.2213 28.3565,121.1334 28.34,121.1005 28.1862,121.0181 28.1477,120.9577 27.9774,120.8643 27.9335,120.8478 27.8676,120.6775 27.7028,120.6116 27.5984,120.6281 27.494,120.672 27.4775,120.65 27.3677,120.5292 27.3457,120.5621 27.2963,120.4797 27.1644,120.4248 27.1974,120.3699 27.0985,120.282 27.104,120.2271 26.9172,120.1227 26.9337,120.0348 26.8238,120.1172 26.7964,120.0952 26.6151,119.9524 26.6096,119.8865 26.5162,119.8425 26.5876,119.9414 26.6096,120.0348 26.714,120.0458 26.7909,119.9359 26.7964,119.87 26.6755,119.7766 26.8128,119.6777 26.7634,119.5788 26.7909,119.6008 26.5876,119.6667 26.6206,119.7876 26.5766,119.8315 26.4503,119.6173 26.4668,119.6557 26.3624,119.7162 26.3129,119.6448 26.269,119.6503 26.2031,119.5129 26.0767,119.7217 26.0053,119.6887 25.9174,119.5843 25.835,119.6338 25.7636,119.5843 25.6922,119.469 25.6757,119.5184 25.5549,119.6393 25.467,119.6557 25.3571,119.6063 25.3461,119.5733 25.456,119.5184 25.423,119.4525 25.5109,119.3646 25.5274,119.3371 25.5878,119.1339 25.412,119.2108 25.2692,119.2877 25.3296,119.3481 25.2747,119.2822 25.1703,119.1778 25.1813,118.9965 25.2967,118.9032 25.2637,118.9801 25.1978,118.9306 25.1154,118.8537 25.0879,118.9032 25.0275,118.9087 24.9176,118.7823 24.8572,118.623 24.8352,118.6505 24.7913,118.7713 24.7693,118.7329 24.6979,118.6395 24.6485,118.6505 24.5551,118.4967 24.6265,118.2989 24.5935,118.1616 24.6814,118.1011 24.5551,118.189 24.5276,118.1286 24.4232,118.0572 24.4947,117.9803 24.4562,117.8869 24.4892,117.9034 24.3958,118.0627 24.4068,118.0517 24.3573,118.1286 24.3079,118.0352 24.2145,117.9363 24.22,117.9528 24.1651,117.9034 24.0332,117.799 24.0058,117.7111 24.0332,117.7001 23.9508,117.6012 23.8629,117.5024 23.9179,117.4364 23.7531,117.387 23.786,117.2716 23.7366,117.2167 23.6212,117.1783 23.6157,117.0849 23.5718,117.0574 23.6487,116.9091 23.6377,116.8706 23.4509,116.7553 23.3411,116.7333 23.2477,116.6454 23.1653,116.6015 23.1982,116.5355 23.1158,116.5575 23.0224,116.4971 22.94,116.2664 22.951,116.0961 22.8247,116.0686 22.8522,115.9038 22.7917,115.6456 22.8796,115.5687 22.8302,115.4698 22.7038,115.3819 22.6928,115.3105 22.7917,115.2171 22.8357,115.0468 22.7917,115.0249 22.7038,114.8875 22.594,114.7502 22.594,114.7557 22.7588,114.8216 22.7917,114.7777 22.8357,114.5195 22.7093,114.5909 22.6544,114.5469 22.572,114.6239 22.5116,114.514 22.4511,114.3931 22.6159,114.227 22.5477)),((121.3202 31.8502,121.4411 31.7513,121.5839 31.6635,121.875 31.5591,121.8201 31.4602,121.5949 31.5206,121.3806 31.6195,121.1499 31.7843,121.2268 31.8392,121.3202 31.8502)))&quot;</value>
                                <value>35.175300000000007</value>
                                <value>99.387700000000009</value>
                              </tuple>
                            </tuple-reference>
                          </tuple-selection>
                        </selection-collection>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Age Breakup' captured-sheet='PopulationAge' id='5' />
                  <story-point caption='GDP Growth' captured-sheet='GDPYear' id='6' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='WorldGDPDashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='12' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
              <zone fixed-size='863' h='100000' id='3' is-fixed='true' type='layout-basic' w='100000' x='0' y='0'>
                <zone h='100000' id='9' name='GDP' w='50000' x='0' y='0' />
                <zone h='100000' id='10' name='GDPPerCapita' w='50000' x='50000' y='0' />
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='51'>
    <window class='worksheet' name='Population'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.42012.950994398147].[none:Country Name:nk]' type='color' />
            <card pane-specification-id='0' param='[excel-direct.42012.950994398147].[sum:Population: Total (count):qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.42012.950994398147].[none:Country Name:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='GDPPerCapita'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.42012.950994398147].[sum:Finance: GDP per capita (current US$):qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.42012.950994398147].[none:Country Name:nk]</field>
            <field>[excel-direct.42012.950994398147].[sum:Finance: GDP per capita (current US$):qk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='PopulationAge'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[excel-direct.42012.950994398147].[none:Country Name:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.42012.950994398147].[none:Country Name:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='dashboard' maximized='true' name='Story'>
      <viewpoints />
      <active id='5' />
    </window>
    <window class='worksheet' name='GDP'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[excel-direct.42012.950994398147].[none:Country Name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.42012.950994398147].[none:Country Name:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='GDPYear'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.42012.950994398147].[none:Country Name:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.42012.950994398147].[none:Country Name:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='dashboard' name='WorldGDPDashboard'>
      <viewpoints>
        <viewpoint name='GDP'>
          <geo-search-visibility value='1' />
        </viewpoint>
        <viewpoint name='GDPPerCapita'>
          <zoom type='entire-view' />
          <geo-search-visibility value='1' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='WorldData'>
      <viewpoints />
      <active id='-1' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='GDP' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAAsTAAALEwEAmpwY
      AAAgAElEQVR4nOydd2Bb5bn/P0d7W7bkvR07ceLsTRL23lD2KqOlpaX0tlza0ttfS7ktXczb
      UqCDvUpT9kwIECB7D494xHvbkm3J2tI5vz+UOHEs2bLjBBzr81ciHx0dHb3Ped/3Gd9HkCRJ
      Ik6cSYggCILsq76IOHG+SuIGEGdSozj8P+3t7Wg0mq/qWuLEOe4MMgCNRoPZbP6qriVOnONO
      fAkUZ1ITN4A4k5q4AcSZ1MQNIM6kJm4AcSY1cQOIM6mJG0CcSU3cAOJMauIGEGdSEzeAOJOa
      uAHEmdTEDSDOpCZuAHEmNXEDiDOpiRtAnElN3ADiTGriBhBnUhM3gDiTmrgBxJnUxA0gzqQm
      bgBxJjVxA4gzqYkbQJxJTdwA4kxq4gYQZ1ITN4A4k5q4AcSZ1MQNIM6kJm4AcSY1cQOIM6mJ
      G0CcSU3cAOJMauIGEGdSEzeAOJOauAHEmdTEDSDOpCZuAHEmNXEDiDOpiRtAnElN3ADiTGri
      BhBnUhM3gDiTmrgBxJnUxA0gzqQmbgBxJjVxA4gzqYkbQJxJTdwA4kxq4gYQZ1ITN4A4k5q4
      AcSZ1MQNIM6kJm4AcSY1cQOIM6mJG0CcSU3cAOJMauIGEGdSEzeAOJOauAHEmdTEDSDOpCZu
      AHEmNXEDiDOpiRtAnElN3ADiTGriBhBnUhM3gDiTmrgBxJnUxA0gzqRG8VVfQJzJgyRJuPwh
      elx+Wno9eAMhtEo5mYlaEnUqdCo5giAc12uKG8AkwRcIsbq8g11NvfiDItPSjJw3Mw2rQX3M
      P1uSJHY39fLatiY27rfRaHcjSof+LhcEciw6lk2xcO2ibGZmJhw3QxAkSRq4lN7eXsxm83H5
      4DjHj4o2Bz9+bReV7U4OG3ck6VX8/huzOGdG6jEZcJIk0WT38MAHFXxS0UHw8FEfBaVc4NyS
      NO49v5hMs/aYGoIgCELcAE5wOh1erv3HJmq7XBH/rlfLef7WxSzMSxrXz5UkifU1Nn7yn920
      9XlH/f5Ms5ZHrp7D4vykY2YEgiAI8U3w1xS3P8j2hh4q2hyEYnhyRkKSJF7a3BB18AO4fCEe
      +bgKURrbZ0T73LWVXdzx0vYxDX6All4Pt7+wnfU1tnG7rkjE9wBfQ6o6nNz16k72d/Yjlwmc
      UZzCw1fPQaca/c/12b6uEY8pb3PQ4fCSnqAdeM3lC1Le5qC6ox+VQmB6uompqUaU8pGfmfU2
      Nz/+9y76fcFRX+/hOLwBfvTaTt74/nJyknRHda5oxA3ga8jvP6igst0JQFCU+LC0naUFFm5e
      ljfkWEmS2NnUy9s7W5iebuKKBVkoZAK7mnpJ1Kmwu/wjfp4/KNLvDUJC+Hxb63u4/90yytsc
      HJwYFDKBk4us3H/JTLKTdERblfiDIv/7bhm97sBYv/4guvv9PPB+OY9fPz8m4xstcQP4GrKz
      sXfIa7uaerkmEKK224UvECInSYfFoKa8zcFNT2/G5QsB0OH0kmrU8PM396KWy0g1aUb8PK1S
      TqJeBcC6mm6+88J2PIHQoGOCosRnlV1U/WMTr9y+hFyLPuK5vqjuYm3lyLPOaFhd3sGmWhsn
      FyWP63khbgBfS4pSjWyttw96zekNcsWTG6jp7CcoSlgNKm5bno9GKR8Y/ACfVnSSlaRDksAf
      ElmQl0iD3T3s5y3JT8KiV+H0BvjNe+VDBv/htPR6+NOqSh6/bt6QzakkSby8qYHx200cPC+8
      vLmRFYXWcd8QxzfBXwFVHU4+r+yi0+kDoLrTyZ8/qWZvSx8A954/jWTjIf98qknDF1VdlLU6
      8AVFQqJEh8PH7z/cR1lrH3qVfODYzEQte5t7KckwccmcDP7rzCLm5yRGvRarQcWPz5mKIAhs
      re+hurN/xOtfVdqOLcLSqqvfz/aGnpjvw2jYWmePaTk3WuIzwBiRJImqDidPrN3Phv02JEli
      Sb6F758+hRnppohPqmBI5A8f7eP5DfUEQxIGjYL7Li7hmfV1lLc6WLmtiV9ePIOn1tbiD4ok
      G9Xce14xm+vs/HtbU8Tr2FRr57Fr5/LB3nb2NPeyqdZOj9uPJHkob3OwuryDRXlJzM5KoKLN
      QSAUfj7LBMi36vnxWVMxqBWIosS+w9b8wxEUJao7+ocE0fa1OXBG2fgaNEpmpxqo63LS5h58
      jEalQC+TsHmjzzw9bj81nf1YxjlwFzeAMVLR5uSmpzcPehK+v7eNDfu7eeaWRcyL8NTd0djL
      s+vrB9yaTm+QP360D60y/AS3ufz8+LVdg5Y07+5pHfbJ197nJStRhy8YorbLNWj5IUng9of4
      vKqLDLOGP145G39AxBcU2dvSx/qabn76+h40SjnLplgGeYFGItJKpMnujmpA1y4rQtHXwyl5
      RrZ1BzAJQcptfuZnG2no7KckSY1TpmRvXTeltqGuU1GCph43S7DEfI2xEF8CjYFASOSB98sj
      LgN63AF++34F/uDQp9m+CD79PneAn19QzL3nF/ONeZmDBj/Aljr7sO5EjVLGk2v388He9mHX
      3q29Xp7+so4LZqWTpFfx5s4W2vq8uP0h7C4/7+1p419bGof/4gdQyAWKUgxDXo/29AeobrVh
      tppQatRcmGFAk5jIHfMzOaUwhTOnmTl5egqSx8c3iqMPcKf36NyqkZj0M4AkgdMbYHV5O59X
      ddHa60WnkjMrM4FL5mQwNdWITDb4cdfp8LG7uS/qOctbHTT3eChINuDxh3B4AyhkAoUpBmQC
      g/JgtCo5a8o7+NXFJawua+elzYMHoVIu47K5mTzycVXEz0o1afh0X2dM37Ws1cHrO5p5a1dr
      xOCa0xdEJZfhD4nDnueCmWEjOpLh3JRJRh3qYBBJJmBKMlDodNEqCZidAYJ+aOnzUmNzYVRE
      3+Sq4m7Q8UWSJPa29PGTlXuo7HAO+tuX1d08v6GeW5fn819nFQ36cQMhEe8wnhJ/SMThDfLE
      ZzW8s7uVTocXpUJGQbKB4jQTFe3htbZCJqCUC3xS0cmWejuzMs1YDSq6+w/NLMumWFiUl8Sy
      KRY27B8cFc00azm9OIW/f1Eb83d+e1crDbbokeEzp6fweVUXbn/k75eTpOPHZ0+lweam3xck
      xajGalQjAGmm6OvzN7fW8aFMwIuMm4otvFLRiSiBXIDgYba4rT26xyoWl+5omdS5QHuae/nm
      M1tGDNrctDSXX19SgvzATNDnCXDxX9bRGMW9aNIoyEnSUdrqGPI3mSBww5IcTppi4fHPaig/
      4pi52Wbm5yTS1OOmprOf5h43gZCEXCaQlailOM1IMCQxLyeR65fk8MRnNfxzXV3M39miV5Gk
      V0X19jx143ySjRruf7eM0pa+gdlKKReYlZlAZqKOTbU2ug54sACmpxu5dVk+MzJMXPnUBryB
      4WeQsaBXyXn3rhUUJA9deo0VQRCESTsDBEMi970dW8Ty5c0NnFOSOhCIMWkU3Lg0h999sC/i
      8ZJExMEPIEoSb+xsDntlIhyzu7mXx6+fx752J999cfvAUiUkSjTZ3dy2PH9QRPjI5dlIaFVy
      rliQxR8/3Ddkz5BiVJNr0ZNm0vDq7Uup7uynptOJUi5DKZfxp4/2sSNCkK6izcm9b+zh/Jnp
      WPRqWno9o7qmWMiz6o9JOsSk3QRva+hhd/PQHzMSogTPb6jn4GT5yb5Odjf3kZagQXHYAFTK
      Ba5ZmD3i+Vy+EP9cVxdx0ypJYHf5+WBv25B1uijB+3vaBr0WaTM6HFNTjdy6PI9vnpSLUn7o
      2gXA4Qlw6V/Xc+Yjn/Ort8tIT9Bw5YJsTpmazOOf1lBvi748EaWwF8zhHZ8UiCO5fF4mivge
      YPzYVGtjNEmW5a0Oet0B+jwBfvSvcKKXAPz6khkkaFVIwPwcMw5PgDd2No94Pn9QxKRR4DjC
      s5GoU1KUYkSMcnGhI/yMKwqtQ/YN0RAEuGROBmqFnPsuKeFbJxdQ3trHu3vaeH9PG95geOli
      D/p5fUczFW0OXvvuUl7c2EB5W+QZ7Uj6vUHkMmHMGayRyEnSccX8rHE73+FM2hnAFsOAORyX
      P8SmOjub6+z4Drg4JUAuk3HR7HQun5dJrkWPLMZQfYJWyc/OK0ajOPQT6FVyfnXRDDRKGWfP
      SI3oaz9nRuqg/6claPjWinxi+dQl+RbOnpFKWWsfv3hzLyu3NTE93cTWOnvE48vbHLyxo4W3
      d7XE9J0gfE8yzNqYricWZALcc+40zDrlOJ3xiPMfk7NOAEZ7QwMhkbtf28X/fVLF+TPTMWkU
      LMhNxBsI8caOQwMkz6rHqB753LOzElhSYOHiORkkaJUk6pR8Y34Wcw8E0M4tSeP7pxUOuP7k
      MoEr5meytMDCtnr7gaCThCAIfPvkAr65LDdqhibAzEwTj14zB5cvyM3PbOHVLU385dMabn52
      S8R4xkE+2NtG+yhz+jPNGm5YkjOq90RCAG5Zls/Fs9OPWVHMpF0CLchNRBCIKfQPMDMzgZJ0
      E6IE83LMhCSJ+m4Xz66vQyYTeGtXCzMzEjitOJnL5mXwzPr6qOdSyARKW/q4+C/rBiWevbip
      gdd3NHP1wmx+eGYRmWYtc7PNXLEgC7vLx+s7WrjmbxsJihJqhYyFeUn88qIZJBvUdPT5MKoV
      mDRKej0BPP4QCrlAilGNViVHFOF/3y1nSX7SoOVSW6932HsgwaiWihCOPv/iohmIEvxra+Oo
      3w/hOuGbTsrlp+dNO7ZlkSe6G1SSJCQODXRBCD9Z/EGRC/68jv1dIyd/ATxy9Rx63QGeWV9H
      c090L4dwIMemy+mLGLkUBEBixIzJ+TlmbP1+GuxuLpmTwaqydnzBoe7FTLOWaxdn8/DqcKDs
      R2cVkWfRo1LIKLDqae3z8r2Xtg+812pQERIleg54vy6Zk8Gupt6ILl1BgN9dNos/fLSPPk/s
      m9tzS1L5200L8QdFXt7cwIOrKqPGFSJhVCv4yXnTuG5xzjGpATjICV0THAiJbKvv4dN9Hexs
      7KWtz0sgJGLWKSlMMXJyoRWtSs7/e6t0xMqleTlmRFEaNvobCb1KTopJg9MbQKWQUZRipK67
      n0Z7bG7CgmQ9p05N5j/bm4dNA5iaakQQoKazHySJkBReO58zI40ci25QoEwpF3jwyjm8srmR
      TqePC2al0d0f3vQeuXG9aHY6j10zl9tf3M5nMUabAX53+SyuP2wJ1Ghz8bcvavkoShbpQdQK
      GQJw4ewMfnLuNNISxj/wdTgnpAGIksTWejsPflTJrqbeYZUIrAYV6Qla6m2uiANMKReYnWWm
      ye4eSF0eLcsLLTxw2SzMOiX72p3c8M/NMXtIFLLw+v6pz/cPe5xeJeeBy2fx0//sGZLGUJRi
      oK7bNXAfdCo5U1ONlLb0Dbo3SrlAskGNWiknEBLJMGt5+Ko5ZCfpWFfdxa3PbR3IJB2OPIue
      1793EhLh1IvSlj4a7W6c3gB2l5+2Xi/dLh+pJg1Wg5o0k4Yci47paSb+8mk1+w5Uwi2bYuG5
      WxejUhzbGeCE2gNIksSz6+p4aHXVsEUdB+nu99Pd7yfPouPCWens73LR7vCgUyqYnmHinBmp
      PLl2/5gHP8D6GhtPrt3PH66YzcflHaNyDwZFiZVR0qAPxxcUeXtXS8QcHl9Q5AdnFPLOrlaU
      chlNPW52NQ2NfwRCEv2+IA9dPYffvlfBljo7v3q7jLvOLGRhXhLfPrmAJ9cOb4hapYyL56Tz
      m/fKWVvVNWyQsbbLhdsXYkqynotnZ2A1qPjJfw4tw3Y39+IJhI6pAcAJtAcIiRKPf1rDY59U
      xbyxPZwCq55nb1004MKTywT++FHliE/fWBCAf968kGfX17OupntU7zWoFSMu0dSKsNv0vSOC
      ZAC5STrevWsFWpWc5zbU88D7FcOea252Ai5fiOrOfpKNamz9Pp66cQFnTk/l71/s52+f19Ib
      YT+gVcoxqBXY3f5RxwBUchkXzk6nst05EG84bVoy3zwpF1u/n9OmpQwqEOpx+ylvdQzsW3KS
      dMzIMJGoG5qgNxwn1Aywqqydv35WM6bBD1Db7eLe1/fw3G2LUSvkdDq8vLCxflyuTQIe/7Rm
      TMGhZKMaUZKG3URqVXJcviBKuTBkmbKs0IpBo0AmCDGt4/d3uvjL9fOoaHPS3e9j5fYmXt7c
      SIPNzbWLcji3JI1VZR3sbOyh3xck2ajG4QmwqdZOV//YZkp/SOTNnS0kaJWcNMXCikIrTm+A
      77ywnaAoUZJh4qVvL0GvUvDM+jpe3tRAc69nkGMjy6zlhqW53LY8f1SzxglhAN39Ph54v2LE
      NN6R2Fhr56VNjdy2PJ83draMynMxErube8mzRi4kH44VhVYUcoFno7hVVXIZt59cQKPdzcVz
      MnhvTxv+oIgghN/7s/OmDQTnOhwj+/P9oXDJ5Yelbew5sOn/vKqLz6u6eGFTA0/cMJ/vnTYF
      AFGUeHZDHb//YF9Mqm8j0ecJsLOxhylWPV9Udw+cs6zVwRdVXXywt41VZR1D3idJ0NTj4Q8f
      7mNHQw8PXz0Hoya2OM+ENwBJknhjR8u4JWA9v6GexXmJrK2M3esRC6IEwRg2kUdy2rRklhVa
      CYkSK7c1D9rbGNQK0hI0PLu+jj5PYOCJOCcrgUS9ijOKU/jZ63vQqRTcdUYhyUY1+4cRyYJw
      tuqja6oobRma+tBkd3PPyt38546TMKgVvLq1cdwG/0G8AZF/b2/GpDk0NDVKGS9tamBr/cj1
      xqvLO/jd+xU88I1ZMUXlJ74BwKhC9SPRaHfzcXln2KUYCbmK20sSeXpv+EkkSTBvaipF8iBV
      rU72OAOIohTRz281qFHIBGq7hx+EB5mRbmJ5oRWNUs6vLynh2kXZbKoNF4dnmDWsLu+IKEGy
      u7mP9AQNd55eyKf7OtlU28mG/d1olPIInzKYBK2CilZn1L9XtTtZX9ON1age98F/EH9QxOkN
      Mi3ViITEKUXJvLCpIeb3v7GzhasWZQ8rBnCQCW8APS7/kJz6o6Wuux9PtOWPIGNqiom/XpsO
      Xh89ogyzXkNDYzfz0xK5MyuBraX1/G3nUEk/tz/I778xi1uf2zri8ipRp+T335g1MGhlgsCM
      jARmZCQA8HF5B58Po7/T1uflk4pO1td0EwhJ9B2YIHUqedTPNmoUXDwng398Gb2+QAL2tjj4
      uLz9qJXfhsMXFOnzBDi9OJm2Pi/+CEHA4d779s4W5mWbR4wiT/hcoNpu17jr0NR0uUYM3+9v
      7WVzez9WvcDm5j4EQUa2xYCn30eyNrI3QpQkFucn8dfr55Npjl6AnmfR8+SNC5idlRD1mHd2
      tYz4vVduaxqyKb5teT7LplgGinsOkqRX8edr53Hy1JHFpz7d10FVR2wR9KOhu99Hok5FdWf0
      GSkaew4r5hmOCT8DHItCaW8ghF4tjxxLCPn5+44W/JKIX5RYW2Wn2Krj8w4n71d1k56gpskW
      eXAk6lQIgsDpxSm8dedyVm5v4tN9nTTbPQgC5Fp0nFGcytULszCP4NIbSewKwgaXk6QbcBcm
      6pSsKLIyPT2s8VnW2ocowoxME0qZjBSTmgyzlhSjOmrsQy4TaBimLmA8CYoSOxt7x+Q9C++J
      JBghL3XCG4D6GARKkg1qTBpF5Bx7SaR60ODzUT9QY+tlb0f0p9W0NOPAv40aBYvzkwiGJMpb
      HXT1+wiGJLbV2+nz+FmUl8S8nERMGkXEaTwWn3eyUc3TNy/iqc/382V1F/6gxM3PbBmSU7Su
      uhsBKG3t4/J5mVy7KJsn1u4fsr4XhPAGO1JV2LFic52drMTY5VoOcvBhMxIT3gDGcnNGIj9Z
      j0mjGHXuz0gsL7TiPxC1fX5DPfvanRE3kavLOxDYT1aSlusW5XDDklwSjkjfPnVqMp9XDa/B
      eerUFAQBOp0+Wnq9wz5JJaDL6ePvX9SSqFMyN9tMu8MbngkkSNAp+e4pBdTbXMfVAERJGtNe
      Y16OmViqRU8IA0gzqWl3jD1d4UgW5iYyMzOBp9fVjSmVNxLZSVrSTBpueXbLEHWHSEhAkz2s
      w/mf7c38/opZLM471CziigVZvL6jmbIoDoDsRC0L8xK54smNMfn/D6fHHWB7Qw+XzsvkW8vz
      UMhl5Fp0aJUKLnl83ajONR5YDSo8/lBM6S0QjkpfNjczphlgwm+CZYLAeTPTx+18Jo2CFUVW
      ig/00BovFuQk8v2Xd8Q0+I+kttvFbc9u5e1drQN1yQa1gt9/YxZzshOQH/ZDC0BJhokfnlXE
      r94uHfXgP4gEvLWzhRc3NTAl2YBOpcDtD9I+ivMtzLWyINVAwoHL02i1LMsevaqDVinnusUj
      11of5MaluZRkmGI6dsLPAIIgcM2ibFZua8I1DpHbC2enYzWoESW455xpbK3vGSQBMhZSTWq+
      qO4+KnFXlz/EL97ci1kXThf47XsVrKnoINOs5XffmEmnw8fq8g4CIZG/Xj+fu17dScc4zIor
      tzUzO8vMDUtycHoDo3JHzsxKYlaSgsYuFyq9Crc3RH6KlkR5IympCbywuZlYfrF+X5Dvn1ZI
      nyfA6zuGj/l8Y34mPz67KOYimgk/AwBMTzdxy/K8oz6PQi5Q1+1m0QNrmHP/an73wT6+uTR3
      kPryaEkzqVHKZeOibOzyh7hn5W6eW1/PS5saaOvzsq2hh021di6akxEWre3s53cfVAwoTR8t
      EvDIx1U09XgIhKRRt1Kqt7lx+ETSzBpmpuvo7HFx1tJpKL3umAY/hDNV1UoZD141hz9eMZvi
      NOOg9b0gQJpJww9OL+S+i0sGtFZj4YTJBnX5gvzwXzv5pGJsKQwH7+eRP2+iTsnNJ+Xx0uaG
      mJQXDqckw8SS/CSeXV8/rrGKJJ0S+2GpxlmJWnrdAeZlm7l4Tga/+7Bi3Dq0HOS7pxTwrRX5
      nPPYFzGfe162BbkkMivdiEwlYHcF6LT3c9HiPP7v7T20x3iJRSkG3v7B8oEWUS5fkAabm631
      dlZub6amw4lMJiCXCWiVcuZkm7lpaS7LpliGlVI5oZrk6dUKHrpyDqdPG30XEZNGQa5FF3GQ
      9rgD7G7u49Xbl3JuSWpMagcKmcDVC7N45pZFfF7VNe6Bul5PAKsh7AZVK2QUJhswa5WcOi0Z
      mUwY98EP4fQCnVoxqqfrziYb25p7eHZrI0+vb+DNXa3s6fLxybb6mAc/hF2aasWhz9Wp5HS7
      fDyxtobSlj68QRG3P4TTG6TT6ePj8g5ueXYL971ThmsED9IJYwAAiXoVj18/nyX5sbX8lAnh
      4vh/feekYb09W+vt6NUKLIawDqbVoKIoxUCiTolGKUOrlJNsVDM328wty/JQK2Ssrexic519
      WDGpsSJKcO3iHL536hRESeLz6i7kcoE8i35UpYujobvfR2W7k/wxZLQejtPjY0396FJXilIN
      gxLbNtXa+d6L24fd44gHusr84s29BIbJEp7wm+Ajsbv8VLQ7SdKruGxuBmurumjrDdcDh3V8
      BFRyGYvyEjlpioXaLhdlbX3DPqVlAjy2pop/bwsLXqnkMh68cg7F6Ua8ARGnN0B5mwONQs6U
      FAOf7utElCQ21doi+t6jLbdGwxcHBGwPpjo02NysqeiIqvl5+dIpzDLKkHweHtzYhlwIyyr6
      AyFUSjlSCK6Zn47f5+PFXUONSJLCDbeXFgwV6T3WhHsFh//t9Aa4/92ymB0e7+xu5YziFC6e
      kxFxY3zCGYBRo+Ss6SkoZDIunJ3B7acUIEnhYFAwJLKtoYe3draQnaRja30PH5d38O9tTSzK
      S6IpSnrBovykQb12/SGR1l4Ppxen8FllJz9/Y++Ado5aIeO6xTnceXohP/nP7iHnsiYauWNx
      GqFgiL+urcUxzO+YnpLAFI2fdY1DU71rOvvRH9E2tbXXgzOKNGGiQY1SESI/MYH7LrTi8XpI
      N+tob+pETDJj9XoQTDpq26MHudr7vFwwO50/f1J9TLJAI6FXyTltWsrA/z+p6ByoG44FUYKn
      19Vx3sx0VBGk108IAwiJEnuae3lhYwNfVnfh8AYJhSTe2NGMRimnJMPEVQuzOH9mOg+uqmRf
      u5N97U5WFFqB8P7hv84q4hdvllJ3RKqy1aDi7rOmUtbmYE9LH/6gSHailpOnJtNoC+fHH64y
      5wuKvLCxnuI0I90R3KfXLsvmrc8q8Rl1XLEsj7mpCeyu7WFpYQI9Pf045WrS9TJ2d/mZkW6k
      w2bnsvkGevr6eOCzQ5KLSrmMU6ZaeXNnC6IUjgtctziHX79TFuUuiVQ29pA2PwOprZ8WJCyG
      EKkmLTqzihc/aeSKFXnD3udASKQw2cCSgqRj3sD6IBfOTidBeygKHmsvhMMpbemj0xnupHMk
      E94AfMEQD7xfwb+3NQ2V5ZbCPuTNdXa21Nl5cWMDeVY9cplArkXHn66czRfVXWyutfPCxgZS
      TGr8QRFfMERIlFg2xcr3T59CSUYCxekmcpJ0vLOrlbLWPv75ZS2JOlVEiUVRgte2NUV8Stpd
      QQosGvSZVhYlq/EAGUY1GytbKMi0YNQoMOoUFKcpeH93B2dNN4E3ROoR2aPBkEhxmolvnqQk
      Sa/izOkpZCfqUCkjb+ve3dpAVoKaje9W4AlBUBCoSNLQ5w2iVHUjhkT+9EkNPl/0KcmoUaJS
      yPj2yQVsqLGN++b+SPRqObcsyx/0WjRJ+uEISeHZ8YQzAIcnwA9e2ckX1SP3pZUIF4o09Xh4
      5Oo5nDMjjX5fkFc2Nw6U/h3kO6cU8LPzigelDMtlAvNyzPzizb3s73Kxu7kP7TDxgU6Hjwzz
      UF2b177cz6Vz0nHYe3myVaDEqqGmy0WP08O2rgDZViNKgpR2eFiUk8Ar29qYmWqkubsfGTBg
      4kJYtr3e5ubyeZmUZCQgShIpRg1NEXSHuvo8dPUNfr1zlFHiguTwBvi0qSmcNzOND0vbR/X+
      0fLNk/KYnj44ojt2jbjI75ywBiCKEr/7oCKmwX84dpefRz6uYlFeEs9tqB8y+NM0ebUAACAA
      SURBVCFcFnn2jFQW5Q32Joni4PRrrVIetXCmJMOESascUsYXCoV4Y8ehpczewzsi9frZe1g1
      1v4DmaW7m4Zeo0GtGNhgdx8oRpcJAgtyE49Jq1KFTGBudjhGJAjw/y6cTnmrI6a07LEwP8fM
      90+bMkTvNNeiY2cEWZfhkMuEqPUXE9YNurnOxus7RpYhj0SDzc0Ta/fzScXQAmsIr+PX13Qj
      SRINNtdA/o1GKeOec6eRalIzLc1Iok6JXj10FtCp5Hz75AIW5o5ckjdWTp+WwsNXz+Ws6amk
      J2jpcft5Y0fzsK2bjoa52eZBXSQzE3U8cs3cQevz8SIrUcuj18yNWNh+enFKhHcMz6zMBFKi
      tG+akDNASJT42xe1MSmVReO1rY3D/nhv7mjhk4oOJAkevGoOgZBIg82Nrd/PZXMzCYoStn4f
      p01L4d3drfS4A6gVMgqS9dxzzjQW5SWSmaiN2ANgPKhsd/Lqlkb6PAHWVHSQoFXy4qZw/+Gi
      FENMDa9jRSbAbSvyB57GIVHC7vKTadbwxA3zufvfu8Yl7whgWqqRJ26YT64lcrzhrOmplGSY
      ombBHolcEPjOKQWDGpkczoQ0gD5PgM21kTXtYyWc1xL5b0q5QHG6ka31drITdXzrua10OH3D
      5tMrZAIapYwVhVZyknSIEmQkaDh7RtqYZ6po5Fp01HT1s6u5l7vPmjpQTTYj3URmoo4r5mfy
      3Re3RxTTHQtLCyycUZxCICTy/p62gb2HKEok6VUsyEmkqsPJ/q6xl6fKBDijOIUHLp81bDM8
      vVrB/ZeUcNtzW0d8sAjAFQsyOWdGatTkuAmZC/RldRc3Pb3lqM+zotBKd79viF/ZrFWiVclp
      G6Uu/kFU8rBS2x2nTkGvlnPFkxsG1JiPlnBXmhICIZF+b5B6m4vV5R0Dhe4quYzTDqREfDQO
      m1SLXsVr3z2JXIuOn/1nD2/ujFyLnGfRcfq0FFaVtdM6yvtWlGLgmkXZTE010tTjptHmps8T
      oN8XRJLAoFGQoFGSbdGRb9VTmGKgrsvFf6/cRWtv5M+SCXDzsjx+cu60gRyiI5mw4rhv7mzh
      x6/tOurznFJk5dFr5vLipgY219qp7nSOOuFtODRKGdcuyiHFpOahVZXjUlxz2dwMdjT2IpcJ
      +INiVD0ks05JVqKO0qPIChWAy+dn8v8unMErmxt4aHXkXsUHWZyfxJ+vncuX1d28tbOFyg4n
      dpd/yPdWyATMOiUJWiVapZygKNHS48HlD454j2QC6FQKpiTrmZVlptftp7qjH7vbTzAkolcr
      mJdj5saluSzMTRpS/D/o+01UacThvtRoUMhkWAxq7jh1Ck5vkO0NR7esOhJvQOS5DfVMTTWw
      vNDKupruMUs3Qnjjq1LI6HR6Ucllwy4Bet0BrPoQtyzL46VNDaOO3CbqlPT7gryxo4U+TyAm
      Q9pSZ6es1cFVC7O5ckEWXU4fLb0eWno9OL1BBCHsvWqwufmwtI39na6Yq7wOIh6I7exu7mN3
      cx9qhYzZWWZuXZ7H8kIriXoVepX8xK4HyB2ndpk5Fh29bj/fe2k7T6+rw38Um+rhqOroZ1dT
      L4vzktBECVQNh0yAqxdm8dcb5jE320ySThVTLkxNVz+FKQaWFFgixiQiIRBeRp01PRWDOvx8
      bLC5Y97kfnZAUU8QBFJMGublJHLR7AyuWZRNgVXPM+vqeHBVJaUtjlEP/kj4giJb6+3c+8Ze
      7nhpO3uaekf1kJmQSyC3L8jpD689as/Dw1fN4e3drXwxQnH5eGFQK7hxaS4b93dT2uqISe4j
      z6Ljh2cWccGsdB5bU83mWhsKuRCTTCCElSG6nD6+d9oUTiqw8MHeNr6s7qar34coSShlMgwa
      BQVWPfOyzby6tWmgG8ycrARuWZZHnyfIr9+NlmIxmPNmpvHUjQsGvdbj9vPYmipe29I00Iny
      WKFWyLhsbiY/PW8aSfrhlSEm7BJIq5Jz9ow0XhqFXN6RJBvUvLvn+A1+CE/d/9rSyHO3LcbW
      7+PtXa1sqrUN0eAxaRRYDWqcviB3nDaFk4usrCpr55n1dQPtVWNlQU4i0zNMXDIng8p2J96g
      iF4tx+WTExAl9KpwAcllczPJTNTy9PpDqnDd/X4un581ovrE4Vj0g+Vaqjqc3P3arqiNw8cb
      X1DktW1N7Gzq4ZGr5zIzM7q4GEzQGQDCQq2XPL5uTN4VgbD0Sd1RuO2OhunpRl761hKS9CqC
      B3zq3c7wEzlBpyLVpOb7L+/gk4pOLHoVeVYdDTY3SXoVzT0ezp+ZNmJt7EF+edEMZqSb+P2H
      Fextjp72LRB2pbY7vAM5VekJGjLMWqwGFeuqu2Nadv3zmws5a0YqkiTxZXU3P/rXLuzu8XMs
      jAaTRsmfrpwdLmSKMBNM6Iqw7CQd954/PWqAYzjyrHpaejxfyeAHqGhz8sSBbitKuYxUk4aS
      zARmZZnJSdKhVsiZlmpEKRewGtXMzEjgzOmpA8GhqxdmD2oYEQ2lXKDL6eX2F7axZ5jBD+Fc
      qXqbG19AZGqqkWsXZdPh8LK9oYdVZR0xebAW5SWyvNCKJEmsLu/grld3fmWDH8DhDfDf/97F
      O7sPqWkcyYQ1AIArF2Tx81EawSlFVhJ1ynELEo2Vlzc3DBvNXFFoZXmhlexELc9vbOC1rU1s
      qbOjkAm8t6eNKcmGERPDcpLCDfJGIywlATWdTjoc3kGDvijFwLkl0WViilIMPHTVHLQqOVvr
      e7j7tV2j6ix5rHD5Q9z7+l7WRlnGTdgl0EEkSWJtZRcPra6kvNUR9SmnUcq4cUkup0xN5tsv
      bBuVvMex4pI5GTx6zdxBbl2PP8SbO5tZub2ZnY29KOWygZK+TLMWXzA0EKuwGlT0+4JD0sBV
      chnLCy1sa+gZs3ZquHJOwBMQUcll/OCMQl7YWI/DE6Qo1UCHw0tIhCS9kgtmpXPLsjwsBjU1
      nf3c8M9N45YaMV4k6VW8cNviQXuCCbsJPpyDYrOL8pNYV93N6rJ29rT00ePyo1HKKUjWU5KR
      wKtbGmm0u1m5velrMfgh3NappcdDjuWQW7estY9fvFnK2TNSWZiXSHVHP30eEZkQThLbXHco
      VmE1qLlgVjodDh/bG3owaRS09Hq4/eQCbC4/Tu/YN/ghUWJ+gYWTC630+4KcPzONf3xZS1aS
      lpe/vWSgk0yiTjUg4e45oF30dRv8EM4Cvvf1Pbz23ZPQqw8N+wlvAAcxqBWcNzMtoppbh8PL
      Z/s6cftDo/JoHGt8QZG3d7dw1xlF4f8HQuxrd6JTK1hdfihTVSaEo6zfPXUKZa199B8oWtGp
      5Ly4sQGLQU13v28gX9/hDfDB3qEN80bLtno7vW4/Za0OKtocfHbPaajkMkwRkgglSeKpz/cP
      MtCvG6WtDh79uIr/uXD6QJH9CWMAw7GrsReLQcXJRdZRd2k81nxS0cn3TyvEFwjxs9f38P7e
      tiEbTlEKKyF0OHzcdUYROxp7SDVp6HT6yEzUopDJECWJM4tTuHxeJlvrw9VvR4svKLLvQNfG
      ph439d0uet0B8qx68iy6QZo7tV0u/vllbbRTfW14eXMjl8zNYHZWeKk/KQzA5vLR6/az6Sgz
      SI8Fdd0uWns9vLSpgff2tA3rqanrdvH6jmbevnMFvW4/33xmC809h3KBPixt59yZaTTY3OPm
      4Tpjeir93iC7m3u58qmNQDiX57yZadx/SQkWQ7iL5WOfVI2LNOWxxhMI8ejHVTx98yJgkhiA
      Si5DLpNR23Xsu5qMlj5PgHU13TGrx1V19PPipga21NmH5Pzvaurlnn/vZv44FuL0e4OUtvQN
      aqsUFCXe29NGrzvAs7cuorLdyZryY6NHdCxYv9/GtgNVcyekAQRFkU8rOvm4ogOTRolRrUAm
      ELHBc6xY9SoIhXAGpfAmWhBQyhiX/KEXNzaMqsXrS5sasLkibzR3NfVGrX4aC9sbeqJe28Za
      G5vr7Hy4t21c8nqOF/6gOJBFcEIawHPr63ngg4qBpCiLXsVj187lzpd3jOl8i6ZncnGGCqVB
      i1Yu8lm1nbLuICenyNnvgab2XoxmI3qCbGwcfcj/UIeZ2Gjv8xIUIw9KUZLGtUxxOMMMiRIb
      arqPeXH8sWB1efiaJ3QgLBIOT4DnNtQPygi0ufw8v6F+zMGv5YUJPP9lA39cU4MtJGBSq7lu
      ZjIrpmex2Kzm0nmZfHNBKneeVchYoiijbfBt0CiiFnloVXKumJ8VsVZ5tCjlAukJw2eRbq3v
      oWcclK+PNwdjJyecAXgCoYhKDT3uQEyNkyOxdl8P3zurkPvPn0YiQXa1O1EqZQQliep2B7ag
      QG6iHq1CgWkM4240grMAWWYt3z45P+Lfrlucw7ycRJYWWEZ/IUewON/CBbOiNx9RKWT4gqGv
      LKVkPDjhlkDJBjVzss2DFMQEYH5OIvu7+se0Vt1V3UZ5bTuIEv4Dv/be5sOkORod/GdTPb6Q
      xFjmmDOKU3hvdxuhGBPZZ2cnIIoSmWYt/b4A/qCE1aBCLhPYVGvjmr9tZGZmAmqFbMyznkYh
      4+6zi8hO1PFZZecgaUgI39Mr52cdEwmW48kJZwAymcBvLp2JP7iHPc3hVIKzZ6TyWWXnUVWS
      jbTZ9RzFZvi0aSkIgsBbO0fO8EwxqilrcQxo46SZNCTp5SzOT2LltqaBGMLOpl6KUgxUtjvH
      9IS+/ZQCMs1aqjv7uX5xDv/e1kRzjwe5TCBBq+TmZXlcMDOd0x9eO4azf3044QwAIDNRy/O3
      Labd4UWrlOMLhvjW89uiShl+lcgEyLfqOaXISuMIHRjNOiUPXTWHO185tJnv9fj5zinFrNze
      PCiAFhIljBoFNyzN5ZXNDTHXIwsCnFuSRrvDy7mPfTmQ0CYQvq83Lc3lmyfloVXJ2dPc+7VJ
      KxkrJ8QeQJLCGj1VHU72Nvexr81Bl9NHuklDkl5FqlHD1QuymJZqHPlkx5kUo4acJB0Wg5pv
      rcinwKpHd4TkolohY36OmUevnsv0dBOnFB1qApKeoGVbgz1iuq+AwP2XlPCbS2eSGoNrNNmo
      5nunTqHB5mLltuZB2ZwS0Nzj4cFVlTy/sR5Jksak0zkSWUna4zooJ/QM4PYHWVPRyX+2NVHZ
      4aTPHcAfElHIZBg1CvKT9Vw4K53L52XS5vDiC379fNU6tZyfvb4HpVyguqMfpzeIKElMTTFw
      +vQUuhw+djb10tzj4e5/70Ipl5GgVVKSYeLsGamIksTzGxo4fVryoOWOXBC4bF4mcpnA9Uty
      OHN6Ki9vbuCj0naaezwD90KtkJNh1nBuSRo3LMnl4Y8rqWiLLj8eFCUeWV3FsimWMWeaDsd/
      nV3Ee9vaSDPJqbH7mJaiZ8d+GzPyLbR19JJoMaEjxNu7OxiPZOsJaQCSJLGlzs6v3y2L+GP5
      QyI2lx+by8+2+h7+/kUtp01LPlB8ov5aZSs22d0DG8y52WZ+c9lMfv7GXhbkJWLv90fU4TlY
      QilKEj84vZAbluTw7ZMLKEwx8t6eVlr7PCzKTWJWZnizLJMJpCVouPvsaZw5PZU/friP0pZw
      gcyMDBM/OXcaC3OT2N/Vz6oYfPr+kMg/v6xjVtbw5YajQS4TSNHKkZBxQbGF9DQD7a0OPi7v
      5n/PKaIjECKUriWoVlLT5Sdf2UHVOFjAhFsChUSJldubufW5rcM+qQ6nrc/Lym3NZJi1XDo3
      8xhfYeykGNVkHybZrVfLWVpg4a07l+P0Blm5vXnYDWxFm5OHV1dx/ZIckvQqzilJRaOU4/KF
      +HRfJ1c8tYGbntlM/YGeB+/taeXGf25mY60Npy9Ivy/Iljo7Nz+zhTd2NLOnuTfmfJ69LX14
      xzH3R6GQc8cZU3HaHPglGfb+AAaVgjNKUtnd7sbjCRLyh6i3u6nudhEYJ9/rhJoBJEnio7J2
      fvlW6ajde0FR4ul1dVy9MBuTRokjSieV48m1i7JZlJ/EL94sxe0PcufphQB8XtnJB3tji67W
      drt4eHUV9108gzte2j64k01QZH2NjTtf2cFfrpvHr94ujVgd5vaHuO+dMm5YkhPztXv8QZTD
      dGAcLT5/kP99vwJJlJAJ4QzYM4uTqWq00eAWUcnAfwz22xNqBqjp7Ofe1/ccVTnjmzubyUqM
      LJV9PMkwa7hleT5KuQyHN0B3v58/frgPW7+Pv39RO6p+vB+VtvOnVZVDfPUHKWt1cM/K3cMK
      CPT7gmytjz1b1qRVkh6j1lCshMRwHCUohfsgfLyviwZ3+Lc+FoMfJpABBEWRRz+uOuqNVyAk
      YXP5v1IjkAsCd58d1q35x5e1A21Ndzf38fLmRsrbRpdP5AmERowhROqDcCQGtYIknWrE4yAs
      mFucZhr5wK85E8YAwl0Qxyfltsvp5dySNFSKr+brXzo3g0vnZgAMqK9B2Nce9gKN/pwjSR/G
      8l0d3nC970gY1Aq+fXIBKSb1uOQcfZVMGANYXdYx6qSxaIhSuKvKLy+agVI+PjqjsTI/x8z9
      l5YMrJ/vOWcaJxVYSDNpuHFpLpfMyRjTefOj6OlDeMa5dXn+iJHw3CQdKUY1Zl30bFKzTsmj
      18wlO1GLQa2Y8LPAhNkE7zqiLY5areLcogTeK+3irOIU1lV34j7MKWE2aklRhaiyRY78lrb0
      cdPSXM6ekcaq0vaY83COhhkZJv5y/fxBnU+yk3Q8d9si+r1BzDoVvkAIjVI+qk4vAiCThbXz
      I3VGX1Zo4eZluTTZ3by7uzWiZ2lxfhKfVXXi8ITfPy3VgC8o0u7wIknhYNyKIivfP62QkgwT
      giCgkB27lkzHiwljAEfKgGu0Wv7rrEIabX5+eW4BTxhUpBtV1HS4SNQqSTCqCPh9XKLVYe/p
      JylRT0t7D6+Whdt7tvV5uWflbvRqBbcszxt1UcpoWVpg4f+unRux+YNaIUdtCC8ldGoFp09L
      HlWOvUGjoNPhQ5IkzpmRyhfVXQRDElpVuIfZrsZelv/hMzLMGlJMapze4ECFl04l5+wZqSzO
      t7DlzUOb4D5PkFSTmjyrnp+cO43sRN2QYnhBgNOmJvP0l3XH5QFyLJgwS6BABM/P7kYH955T
      SHWtjcsWZFJoMZCsk3PFslzsPT7OnpXCxspWctKt1Ozr4KTcQ03vAiGRB6+aw28vm0mX08fZ
      M1KjNlI7GtQKGbcsy+OZWxYN2/nkcL532hSMo9D/nJ5mIs+q56LZ6TT1uPEHRc6ZkUqCVklQ
      lHD6ggMtnrqcPi6fl8mDV87mnJJUTiqw4PAE6HP7BwppBMKlmrub+1hb2UUgJEZUgoBwE/Gv
      g1dttFgM4c3+hJkBEo5Yl/r9fj4obSfHrKGx14e63sU0q4YeX4gnPqgkPVXHCxtbWTgllX0N
      neQUJvPZ/kPNnU0aJXOyzKgUMj4qbeelTQ3MyDChlMto6fUMiFEdDcVpRv7nguksL7SOKhN1
      VmYC955XzH3vlI24uTVrlWyptyOXCdy2PJ81FZ2IEqwq74ioPi1K8MaOFowaBZ9UdPK3Gxew
      KD8JzYElzqqyDvIsOjqdPh5bU0WmWTsoWHckSrmMS+dl8OdPamL+fl8HLp2TwQ4mkAFMTTGw
      5TDNGY/bw5qqwcui9w//z/7hz1eQrB8YlCcXWSlvc9Bkd6NRyrltRR7lrQ5KW/pGLb6rONBP
      +MaluVw4K32QdEisCEI4f8diUPPA++U09QztAqNRyEjUq8i36tmw3xbO1jRr+c2lJayvsfFR
      WTv2KJVaB2siUk1qKtodnFGcQlCUsBrU/OD0QrQqOZIkcdm8TBJ1yqjVZwe5dlEOL29qxDZB
      KsOMGgU3Ls3jPiaQAawoSualzY0jHxgjy6ZYOfhQ3lJnp7zVwbklaawqa+f5DfUoZDLMOiVn
      FKcSCIlsb+jB5vIhSuEcHEk6KB8oQ36gQZ4oQopJjccf4i+f1vDYmmr0agUZCRqmphlZkp/E
      zMwEzFrliB1MBEHglKlWFPISXthQz/4uFyatYqAzzLRUI6vK2mnr83L1wmwum5fB7OwE5uaY
      uXB2Buv3d0c1AICaThdtfV5WlbYzNdXIox9X0dbnxaxT8sMzirh8fmbMS8L0BA1XLMji7198
      /XWBAC6enUG+NTyrTRgDWDbFQqZZG7Un1mjQKuVcODt9YBB+99Qp1HT18+rWxsNqiUX6fUFs
      /W2cXGRlWaGFzbU2pqeb6HT4uGRuBlNTjby/t41NtbYBqfWu/qGJdqUtfawu7+BxwgUs55Sk
      cvNJeUxJie5z39HQw33vlLH3sNZEfR4FZq2SKxdmMSszgTX7OkCCC2els2yKddD752SZabBF
      TlcWCPcgyDRruWJBFj9/Y++AsfR5Atz7xh7yrfqY5VUEQeC7pxbwzq5W2kfZff54YzWouPOM
      woHffsJsgo0aBbefUjCiInIsXDYvg6LDBl9dt4tPKjojttbxBEJsrbdz2/J8TpmaTGGygeZe
      Dx+VtnPXqzt5ZXMjtaPoM9Du8PLCxgbO/78v+dXbpXQ6hw6YHY093Prc1kGDH8LpCs29Huq7
      XZxclMw7d67grTuXc8pU65BzfPeUgqjqECUZJt7Z3Upzj4e/f1E7ZKYIhKRRSysm6VT8/ILi
      cevfdiwQgP8+ZxoZhxX6TxgDEASB6xZlc+rU5JEPHoapqUZ+dNbUQUuQL6u7hs0v6nEH8AdF
      rlmUwxfVXaQY1Wypsw+7xBgJf0jkhY0NXPf3TWyqtQ0UtEiSxO/erxhWWvyd3a2sr+lmRoaJ
      mZkJEZdTMzJM/PnaeaQnaAYeGgqZwEWz03n0mrmkJWhQK2TkWiJvcGWjHMiCIHDh7HS+Me/r
      k217JOfNTOOqBVmD7teEMQAAtVLOn66czawR2t5EI9mg5i/XzRvijuyNYaPb6wl3gm/r81I2
      jAz7aNnf5eK257by/t42JEmipdczYmBJlOD9CE9oSZJosrt5fXszP39jL0+srUEmCCjlAgJh
      n391Zz9//Ggfp01N5qfnFfPby2aSbBic/6NSyLhodnQ1iGgoZDL+58LpzBnHOoHxYlqakfsv
      LRnilJgwe4CDpJg0PH/bYn72+h7WVHTE3BFwbraZh66aQ2GEdfdwa3EI1+0iSXznhW3j2kf4
      IG5/iHtW7kYALAZ1TMbV3HNofe/xh/iiqouXNjewvaFnkIzh4Ti8QRztTioPNAaXCwJPf6km
      O0k38JlWg5ofnlk05odMok7Fkzcu4Lp/bIq6BzneZJq1PHnDfFKMQ+MwE7ZBhjcQ4s2dLfzt
      8/1RxWAFwo0Rbl2ex41Lc1HIBN7c2cru5l4CIZEZGSYunZOJSiFwwZ/X0R6lw/lJUyw4PYFj
      3ujNrFPy8/On87PX94x47DklqTx14wI27rfx8OpKdjX1HlUjbr1KzpnTU/n5BcWkmTQx99mN
      hCRJVHY4uePF7dR/xUaQnqDhbzctYFaEpeKE7RR/OEFRYssBjcr9Xf30+4JolHJyknQszkti
      WaEFnUrBljo7P35t1xAvkkmj4IHLZ5GkV/Gj13bRdUTHxpmZCWSaNawq6+B4MCVZT58nMOJM
      c+/5xTTZ3byyuXFchanSEzT85rKZnFmcclRGAOFZ6s6Xd7K7ObrSxbFkerqRv14/n4LkyDP8
      CWEAsdBoc3P13zZGddFplXKev20x6QkaHl1TxdrKLrIStVy1IIusJB13vLj9uPYUK0w2UG9z
      RY0CJ+lVJOqU7I9SAHO0qBQyfnRmEbefUjDqqi9JkvCHRLwBEUmS8ARCPLSqkrd2tcbUF3k8
      kAlwwaz0Afn2aJwQLZJGQpIknttYP6x/2hMI8fin1fzs/GLWVnZhd/kRCOe5PLiq8rg31Otx
      +7l5WeQEPbNOiccfOioP1Ej4gyIPra7E5vLzi8O6qQxHSJRYW9nJR6XtVLQ5sLsDSJKEQa0g
      x6JjUV4SFa199B0DJYnDsRpU3H32NK5amBWT8Z7wBhAUJdZVj9wWqazVwZ8/qR4YWDaXn/vf
      KWdn0/FP9bW5/KQY1bz3wxX88q1SmnvcLCu0UmA18MrmBnrdRx8MHAlRgmfW12FQK/jhmUVR
      /fuSJLGuppuHV1eyuylyK9aDfQyMGgXJBjXeYGjcJVXMWiUXzUnnx2dNHbFD/OGc8AYgSVJM
      N9sXFEk6ost5TVf/kA6Mx4t3d7eSlqBhW0MPAuFI+Bs7WiLmBR0rJAmeWFvD9HRTxGbTwZDI
      8xvreWhVVUyaq05vEJcQZFFeEiUZCXxS0UFzr2fMSyO5EJZ7uWRuBtcszCbXohv1vuVrZwD9
      viBNdjetvR5a+7zY+330uAN4gyECQRG5TIZaIcOkVZCoU5GWoCEjQUt2kharQT3kBshkYYnv
      tigenoMYNQp+eEYRkgRb6+0sybewtd4+ZFN8vKjtdrG9oWdgcDy2pprGr8CjEghJ3PdOKSUZ
      JrKTDgXNJEniuQ31PPB+xag24aIEm+vsJOlVvPfDFew5kHK9rcFOZbszqgv3IFqVnKIUA4vy
      kjhlajJL8pMGulSOha/UAEKiRIfDy66mXrbU2dne0EODzYU3IBIIiTHfWIVMQK2QYTGomZdj
      ZmFuIovzLeRYdGgUMi6cnc7Oxt5hz3fq1GTSEjT87vJZBzZxIRb8ds14fM0x4faHKMkw8cMz
      C2mwufmwtP0rkyHvcPh45OMqHrl6zsADZn1NNw+vrhrzNX1U2s70dBN3nVHIsilWgqKI2x+i
      w+Glweamz+MPd8OUJPRqBQlaJTkWHekJWrRKOUq5jKN0UgFfgQFIkoTd5ef9vW2sKmuntMVx
      1B3Fg6JE0B/CZXfTaHfz9q5WVHIZU1L0nDYthTOLU5ibY2ZnFOHZrEQtd51RhCAICAJoZHKq
      OpwxT805KQksyzHh6Ovng+rx2zO09/n48VlT+el/9nzlIrTv7m7l9pMLmJFhIiRKPLQ6tmVP
      NCTCnXwum5tJjkV3QPIxLPs49ThquB43AwiJEpvrbLy6pYk15R3HvKeU/J93CgAABpFJREFU
      PyRS0eakos3JU2v3k5+sx6BW4PaHBjR35DKBZVMs/OaymWQeUdU0GvnEOXkppPkcdPtFfnFh
      MV1d/aj1Kmrb+5mRYaK0vpu0jCQ0IT89fgGDXOJf25rpH+EWdDi81HS6vhYtiIKixN+/2M8j
      18zl88rOITXaY8Hu9vPCpnp+ccH0o445jJVjbgD+oMi6mm6e+nw/Oxt7CIxDU7nRIsGAaJRa
      IWNWppmLZqezpMDClGRDRMmQSF1mhkOukBGSyVH7XAg6HQuzTWQYNewsbSMrJ5kpkpc13UHu
      WJFDv8fH5qpO9vYM78r0BEJ8WNoWUc3tq2BtZRedDh8flo2fQX5U2s7/XDB9XLJ8x8IxNYCy
      1j7+8OE+1td0H1WYfjzxBUW2NfTQ4fCSoFNF1cEZjVxKc7eD0uYO2lFiVIsIRjm7m/pwuH1U
      9XoxyGzIMs1MTxJ4d28nSSqJZtfIyz6lXOD9PUff8X286PUE+Kyyk4pxTAlp7vFg6/eTbBy/
      zpaj4ZgYgN3l54nPanhxU8NxDyLFSlOPh7tf28XKbU38zwXTB6Q+DmKOUSENYGftwTSJAO/s
      6wWOWB7YPayrGX2TbpcvRF33sYn2jpU15R3YR1kmOhKtvZ6vzADGNR1alCTW13Rz5ZMb+Oe6
      uq/t4D+IBGzYb+Pav2/iybX7B2nx/P/2zi22qTqO459z6WUt3Wg36iobhSnsAoOHieMSTVxi
      xAV9kWi84APhBX3yybgI4cUHF59MzDTEBBV8kmB8UIlGwZhBJFsEWUxBGJdB59ita7teTs/5
      +9AVRt2ydj1tl4XPc9OTk/z+//M95//7fb/+akfZHssZppMpU4bzzeTC0KTpLQ2lapGYC9MW
      QEo3+OSXf9h39DzXltiutRCRRIruUwEOHOvj35mWidoqe9l2JUjLH4si5/WZ0VkCl7v0u5G5
      BZt9AFlKTJFAI1Nxuk7+lR4rNOMPy8Svgbvs6emle88WtjV42Pl4DSdzCK4rBtUrbLhzLAxn
      hZ3Dzz/GRCTFtVsjnA4mUHSNlKTgUCQkVcbQBUlNQ5dVHLJgMmFQ7bQQjmuEp1M4bAqjOUgb
      QdqBDsw5IFxhU8vqK1TQAhBCEAzFeet4vymfxZYCtyZiHDjeR/dLm9m1qZZv/7yd89CNmXQ0
      eudNg8+m0V/Nxb9vY1S5qataycc7PKQSAllo9N1J4rUJPFUKo5qKFtVoWm2nd2gaOQV1LpUr
      wRAVquCj3jsLXks3BC2+ynmt2PPlqfX5eSaZTUES6MpIhNeOnFs2xZ9hclrj7a/7CYbiNNTM
      bzpbLKyqzCtb63P+/WBwiicafahCUO+pIJHUGY0miEWmOX0nysDgOIGhCcaFhbVeJ4qq4jQM
      Tg2McOnmONs313MmMJrz9dobqlk5z8B9PlgVmb3b/GU7A4ACngCB4TD7vzhf0uasUqLp6eH0
      2f0vpaKj0cvGRytnpMbCTITCHPrpGrUVCt/0xXA5bKiGTjhlEEvBAAJlEJDHcNtVDGEQSehE
      kzpRQ2fdI6P0z2MinI0qS1weDtPZ6suykVnEfTZ5aTch0b4QFrUAhmdkz3It/gxJ3eD6WBSr
      IhfVOHc2qiyhC8G7Jy7mtTOGoglCM6okmjX7cL+0DcJZ0VA3xyJ88HOEXI/9bBaF1roqzl4d
      o97tWHRUqt/j4ODulrLbqOQ9ETYWSbDv6Hku5JA48pD8kCUJt9NyL8xbkaWyfiKci1UuG7KU
      bhVp8VVS47Ly2+Xc5RPAGo+Dz/a20VTrKqv8kSRJyusdIJkyOPTdwMPiLxJ72lbTvu6+JHDZ
      VZaaz9S2Bg/17vQZSZvfTc/rbezbufZ/4d5zocgSzzR5Oba/nWZfZVmLP0NeEujLs9f5IU/H
      sOVE5nFdjF35hS0+Dr+4kcHRKIHhKaZiGu88u4Gvzt3IOQ62FKyssHLp9hQWRcZukamwKhzc
      3cLLW+v5/PdBzgTu3ssxzuC0qTy51sOb2/08vWFV2WXPbHKWQP03Jnj1yLklf7pbbBpqnIxH
      k0wW2MKdwaJIvNHu573O5ntNeXFNRzcEDqvCp2eu8uGPAVOuVSjZw/g2VebEgR1smvEQMoRg
      OqkTDMUITsYxhMDjtLLG48Bltyypwoc8huLDcY33F5HNuxwZmozR1dnE9xeH+SOPWNG58FXZ
      6epsprPV90BxzJ5wem5jLT2nrzJV5GHyXOho8jJ4NwqkF4AQ4oFkGFmSWGFTWe91sd5bup7+
      QvgP4f7Qhbw6GEwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='GDPPerCapita' width='192'>
      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
      cvboAmWdvB0pE8KcAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='GDPYear' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Population' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='PopulationAge' width='192'>
      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
      jmExAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Story' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='WorldData' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='WorldGDPDashboard' width='192'>
      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
      PYHU2vVGXiD5Xvl56UarjTxG06rGdE9LOX759LYF8w5ZCALf+Pwq/HhvR97k5i8UsgDqRYSN
      FEB9OF2dSmEkxHqeH6PnGHl25PeMlNRoT5A0DpCMhlInfvH1rfjanQ3zGixrrnThv57sxFM7
      GmdVs98kNamEPpnHRrtHMDKf1PcYuS/V19WriZ4HSDsuve8hSZISoVaeIU1+aiZVAi4NB/DP
      75zFEYOal5mg2MHg6R2NeLyzZtH00Voo0q0K4fcn7w9nNOPqCbmRR8bob07nb6f7fL2VRnnW
      bBRA5uSNcbx2tA+HTw9mLJW6vsSBxztr8MjGahSY5k5GmK8WSblERhRAZizE4fDpQbx3Zggf
      XhmddrW5xjIn7lhZit2rK7F+eWFKrTeZHqYCJJJRBVAjiBIuDPpwdtCP/tEQhnwRTIR5cIII
      kgAcDIViJ4NlhXY0ljnRttSTk53RcwlTARKZM9uCIgm0VHnQUpX9faJM8hdzV2mS15gKYJLX
      mApgkteYCmCS15gKYJLXmApgkteYCmCS15gKYJLXmApgkteYCmCS15gKYJLXmApgkteYCmCS
      15gKYJLXmApgkteYCmCS15gKYJLXmApgkteYCmCS15gKYJLXmApgkteYCmCS15gKYJLXmApg
      kteYCmCS15gKYJLXmApgkteYCmCS15gKYJLXmApgkteYCmCS1/w/xPvi8a6hbDQAAAAASUVO
      RK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
